onal conference on computing, communication and automation (iccca2016)  
 
isbn:  978-1- 5090 -1666-2/16/$31.00 ©2016 ieee              160 
 strategies for web application development 
methodologies 
ravi sharma  
it department  
amity university  
greater noida, india  
ravisrma1988@gmail.com  shipra ravi kumar 
cse department 
amity university 
greater noida, india 
shipra.chaudhary85@gmail.com 
 
keshav gupta 
school of computing science and engineering 
galgotias university, greater noida, india 
keshavgupta101@gmail.com 
 
abstract—web applications have grown very unexpectedly in 
these recent years but due to difference between web 
applications and software applications, their development 
methodologies differ in many ways. the distinction between 
these two different types of applications acquire for 
introduction of development methodologies dedicated to web 
applications. the thesis work represents various development 
approaches and methodologies proposed specially for web 
applications. agile, object oriented, uml based etc. are some 
example of approaches to be used for inventing techniques for 
web application development. appendixes contribute to the 
thesis work representing implementation of agile based and 
uml based web application development techniques. 
 
keywords —xp (extreme programming), wcml (web mark u p 
language), corba (common object request broker 
architecture), awdwf (agile web development with web 
framework) 
i. introduction 
an application running on a single machine and benefiting 
its user only i.e., being used for solo purpose, constitute 
software application and an application running on a 
network, providing services to its users on the network itself, 
is called web application. popularity of web application has 
risen exponentially in last decade and every day numbers of 
users of web applications are increasing very rapidly. 
software application is all the computer software that causes 
a computer to perform useful tasks benefiting its users 
beyond the running of the computer itself, thus, making it 
distinct from system software which manages computer 
capabilities but does not perform users’ tasks. thus softwar e 
application exploits the benefits of some particular 
computing platform and works for some particular purpose. 
some applications have several versions in order to run on 
different computing platforms. sometimes, a new 
application, made for working on a single platform, becomes so popular that it increases desirability of that particular 
computing platform. such applications are known as killer 
applications. web application uses a web browser as a client 
which request/post some data from/on server which again 
may be centralized or distributed in order to improve server 
response time. client is a computer software application 
installed at users’ side which runs web application, 
developed in a browser supporting language (such as 
javascript combined with html ).  
ii. related work 
 
since introduction of web into public as web 1.0 in 1993 , 
web development techniques have been evolved and raised in 
exponentially increasing count. the work in this thesis 
specifies 10 web development methodologies based on 
different approaches. the very first in this series is web 
application development using corba (common object 
request broker architecture)  presented by eun sook cho et 
al. in 1997 at ieee. this is an object oriented web 
application development approach that brought 
phenomenally rapid expansion in world wide web 
 
second in the series is again object oriented technique for 
developing web applications presented by martin gaedke et 
al. in ieee internet computing in 1999 named web 
composition . web composition technique uses two 
modules: component model and markup language. main 
concept of the technique is modelling web entities like web 
pages or some specific web link at arbitrary level of 
abstraction and presenting specifications in wcml (web 
composition markup language) which is based on xml. 
extreme programming (xp)  is next approach based 
on agile development principles to develop web applications. 
frank maurer et al. presented a paper in ieee computing in 
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:42:38 utc from ieee xplore.  restrictions apply. international conference on computing, communication and automation (iccca2016)  
 
161 
 2002 named extreme programming: rapid development for 
web based appl ications specifying 12 agile practices to be 
followed while developing web app lications . the list of web 
application development methodologies continues with uml 
based approach web application development by supporting 
process execution and extended uml mo del proposed by 
wookjin lee et al. presented at proceedings of the 12th asia-
pacific software engineering conference (apsce ’05) 
organised ieee in 2005 . the development methodology is 
based on agile development approach consisting of 
navigation model and co mponent communication model, 
extended from state machine package and interaction 
package of uml 2.0 respectively.  
 
next development methodologies described in the thesis 
is agile web development with web framework  propos ed by 
hu ran et al. in 2008 . awdwf e mphasize on 
communication between people for example, the 
communication among the development team members, and 
between the customer and development teams. in order to 
handle rapidly changing customer requirements, prototypes 
are released frequently and th is helps in quick and timely 
customer feedback. the main idea behind awdwf is 
keeping development team focused on the core business 
logic and thus avoiding programming duplication and 
wastage of resources, consecutively, improving system’s 
efficiency and s tability, and maintaining quality of the web 
application. 
iii. development methodology 
 
application development methodologies are promoted as 
a means of improving the management and control of the 
application development process, structuring and simplifying 
the process, and standardizing the development process and 
product by specifying activities to be done and techniques to 
be used. using application development methodologies 
beneficiate the application to be developed in following 
ways: 
 
1. conviction of why to do what to do  - first step in any 
development technique prescribed by any methodology to 
use advocates for feasible study of the system being planned 
to develop. analysis of feasible study report may lead to 
deviation in objectives of the system being developed for 
better good. 
 
2. complete and clear set of requirements  - many techniques 
for requirement gathering and analysis have been described 
in various development techniques prescribed by chosen 
development methodology, using those, helps in getting clear idea of what to do and what is needed for developing 
the application. if one starts coding the application without 
having the clear objectives, development of application may 
lead to unwanted and unreliable product and thus leading to 
failure of organizati on. 
 
3. a proper guideline of how to do  - now we have well 
known documented requirements set for starting 
development of application. but next thing is that how to 
formalise development in proper steps and manner so that 
minimal risk would be associated with optimal benefit. 
methodologies provide a way for this according to what 
we want to develop and what will be its running 
environment. 
4. optimal formation of teams and distribution of work  - 
randomly assigning the work to random people cannot 
lead to optimal use of workers according to their strengths. 
it is must to have maximum use of man power in order to 
get efficient and rapid product output. 
5. minimal risk with optimal benefit  - methodologies do not 
only provide ways for efficient development of project but 
also guides after the development in terms of deployment 
and maintenance plans. 
 
 
figure 1: web application development approaches and methodologies  
 
iv. agile web development approach 
agile software development is not a single approach but a 
framework which contains a family of processes which is 
based on some core principles, also called as agile manifesto  
drafted by well known developers in 2001 defining the agile 
development.  
agile methodologies embrace small team formation, 
making face- to-face communication possible, working 
together to define quick prototype to visually present the 
problem. as shown in below figure, each iteration has its 
requirements followed by development, defining and running 
integrated test scripts, and finally getting results verified by 
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:42:38 utc from ieee xplore.  restrictions apply. international conference on computing, communication and automation (iccca2016)  
 
162 
 the user. verification occurs much earlier in the development 
process than it would with waterfall, allowing stakeholders to 
fine- tune requirements while they’re still relatively easy to 
change. 
 
a. extreme programming 
 
extreme programming (xp) is one of the most popular 
agile approaches to develop the web applications. below 
figure shows over all process of development of web 
application for smes (small and medium enterprises) 
integrating requirement analysis and designing phase using 
xp practices. 
 
 
figure 2: development of web application for smes integrating 
requirement analysis and designing 
phase using xp practices 
 
extreme programming (xp) approach focuses on building 
small teams of 5 to 15 members and follows 12 related 
practices. also, xp concentrates on delivering executable 
code and automated test drivers rather than spending effort 
on paper based requirement and design documentation part. 
building small teams for development helps in avoiding 
documentation part as face to face communication can take 
place effectively. but, as the development organization 
grows time spent exchanging product knowledge and 
training new people increases and often renders xp 
unsuitable. xp proposes a set of software development 
practices to increase productivity while maintaining quality 
  development of website red drop using xp practices 
 
red drop  is a social website motivating people for donating 
blood to needy ones. this website provides information 
about blood donors available in required location. also, 
people, who are willing to donate their blood, can register 
with the website and update their contact information on the 
server so that needy persons could contact them and get the 
blood. for requirement elicitation, use case  diagrams have 
been used. first of all, home page designing takes place for 
which use case diagram is drawn in order to capture main 
requirements set. below figure shows use case diagram for 
home page . 
 
 
figure 3: use case diagram (homepage) 
here we present user interface view of all the web pages of 
the website red drop  from the perspective of anonymous 
visitor, registered user, and admin.   
 
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:42:38 utc from ieee xplore.  restrictions apply. international conference on computing, communication and automation (iccca2016)  
 
163 
  
anonymous visitor (home page) 
 
figure 4: screen shot of home page of red blood website 
 
admin (admin panel) 
 
figure 5: screenshot of admin panel 
 
b. agile web development with web framework 
(awdwf)  
 
awdwf exploits advantages of agile development using 
web framework. it is an excellent web development 
technique for the web application system which fulfils the 
requirement of quick service, quick response, and adoption 
of rapid changes. awdwf emphasize on communication 
between people for example, the communication among the 
development team members, and between the customer and development teams. the success of project depends on 
regular and continuous customer feedback. in order to handle 
rapidly changing customer requirements, prototypes are 
released frequently and this helps in quick and timely 
customer feedback. this process of receiving feedback, 
testing the product and then evaluation take place throughout 
the entire life cycle.  the main idea behind awdwf is 
keeping development team focused on the core business 
logic and thus avoiding programming duplication and 
wastage of resources, consecutively, improving system’s 
efficiency and stability, and maintaining quality of the web 
application. awdwf is based on the web framework and 
therefore, the most of the web application system is based on 
the mvc multi-level structure to develop. 
 
c. agile web application development based on lift 
framework 
 
lift is framework for development of web application which 
is based on scala programming language combining 
advantages of popular frameworks like rails and django. 
 
 
figure 6 : lift application framework’s position  
 
the very first layer represents the agile application 
framework which is here point of interest and hu dong, and 
yu xue have described this framework in their research 
paper ―designing and implantation of agile framework based 
on lift‖ published in 2010 at ieee.  
 
 designing of agile application framework 
 
below figure shows a pipe filter architecture depicting main 
components and work process of agile framework. the xml 
file is input to analysis engine which parse the file and 
generate the corresponding components. these components 
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:42:38 utc from ieee xplore.  restrictions apply. international conference on computing, communication and automation (iccca2016)  
 
164 
 along with the database make input for lift framework which 
then outputs the information general parts.  
 
figure 7: pipe filter architecture 
 
 implementation of framework 
 
(i) analysis engine subsystem  - xml analysis engine is 
based on javax.xml which is a standard java library and 
its main function is transforming the xml information 
into document object model (dom) tree structure and 
then analyzing them using xpath mechanism.  
(ii) menu generation subsystem  - page information is 
converted into the main menu of the system. also, 
menu structure, page view style, and access control 
strategies are defined by menu generation subsystem. 
(iii) template generation subsystem  - this is one of the 
kernel function of the framework responsible for 
generating different components like add, delete, update, 
query etc. figure 19 shows the process of template 
generation.  
 
v. object oriented web application 
development methodologies 
a. web application development based on corba 
common object request broker architecture (corba) 
is an architecture that is proposed by omg for objec t 
oriented distributed computing environment. corba 
provides service suit which includes services like naming, 
events, trading, security, externalization, licensing, 
concurrency, transactions, persistence, time, and so on. it 
allows different implementation languages in server and 
client. in corba, objects are accessed using object request 
broker (orb) which maintains two databases: interface 
repository, and implementation repository.  this model is 
effective for establishing peer- to-peer distributed systems . 
corba architecture provides fast web application through 
load balancing. client can access all of the objects without 
physical location because both process and data distribution 
are supported by corba. following points explains 
corba in brief - 
1. object partitioning  - there may be three types of object 
partitioning - client objects, server objects, and client/server objects. main advantage here is that almost 
all objects may play role of client and server because each 
object can access the method of other object without 
physical location. 
2. process/data distribution  - it means that local machine at 
client side should process the data thus reducing the 
network traffic and enhancing response time. 
3. multiple services - corba provides various services as 
named earlier which supports the integration and 
interoperation of the distributed objects. for example, 
object life cycle service defines how corba objects 
are created, deleted, moved, and copied. 
4. synchronization  - for efficient client/server system, 
blocking and non-blocking, two model are considered. in 
non-blocking model, clients can process other tasks after 
issuing request. 
 
b. web-composition (object oriented web 
application development) 
 
the approach is based on a web component model that 
abstracts from low-level web implementation technologies 
to support seamless, reversible development of web 
applications . figure shows the main idea of web 
composition which is composed of mainly two parts - 
component model, and mark-up language. a resource 
generator maps the component model to a standard web 
implementation. the overall process is deriving web view 
from developer’s view of an application which is maintained 
by component model.  web composition mark-up 
languauge is based on xml language which is a meta 
language facilitating user defined tag based textual format. 
the figure – 21 shows an example of structure of a wcml 
document.  the xml document type definition of wcml 
describes a markup notation for webcomposition concepts 
i.e., for component descriptions, properties, and 
relationships. 
 
 
figure 8: code describing the structure of a wcml document 
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:42:38 utc from ieee xplore.  restrictions apply. international conference on computing, communication and automation (iccca2016)  
 
165 
 vi. uml based web application 
development methodologies 
 
a. web application development by supporting process 
execution and extended uml model 
 
although uml is one of the commonly used modelling 
language for modelling software projects but when it comes to 
web application development, it is not sufficient. this technique 
uses two more features of uml i.e., conceptual model, and 
architecture, drawn using class diagram and component diagram 
without extension, respectively. 
 
 
figure  9: overview of methodology  
first work product shown in the figure is storyboard 
which is representation of part of web application developed 
in the current active cycle along with its interaction with 
user. story boarding is performed by software analyst who 
defines the goals of the web application.  
 
by using the information provided by the storyboard, 
architecture and user interface prototype are produced. uml 
component diagram is used for designing archit ecture. for 
confirming the ui design, client gives his report formalized 
as attribute wise such as layout, images etc. the component 
developer implements the components, which constitute a 
business logic layer of the currently developed web 
application . finally, the components created by component 
developer, ui prototype confirmed by clients and db system 
are combined into a subsystem of web application. each 
development cycle produces a subsystem and their 
integration after performing test activities gives  final web 
application. 
vii. conclusion 
 
agile development approach forces on quick development 
concept avoiding need for large documentation. three methodologies have been discussed based on agile 
development approach: web application development using 
extreme programming, awdwf, and agile development 
based on lift. xp methodology is useful when customer 
wants his continuous involvement with developer team. next 
methodology based on agile approach is awdwf, this 
approach gives some better quality result as development 
team is kept focused on the core business logic. one more 
methodology is, lift based development, which is more 
managed development method in compare to previous two , 
and used for somewhat complex applications provided they 
do not require very continuous handling of change in 
requirements. in object oriented development approach  
corba is one of the methodologies for developing web 
applications . web composition, is another object oriented 
methodology which is again capable of developing much 
complex web applications in a very cost effective 
manner.uml based web application approach provides a 
very easy and effective way to manage and control 
development process by use of uml diagrams.  this 
methodology can be used when there is a requirement of 
handling very quick and major changes in requirements very 
effectively in very less time.;;t  - this paper focuses o n the management of 
accessibility requirements in web application development 
projects.  first, i t presents a map that integrates  the methods 
for assessing web accessibility, the factors contributing to 
accessibility barriers, the consequences of accessibility 
barriers and  the possible solutions for enhancing the 
accessibility of web applications .  second, it provides insights 
into industry practices related to every theme  in that map 
and the working knowledge  that can help improve the 
accessibility of w eb appl ications .  f indings show that 
applying accessibility standards and using effective 
evaluation methods and tools  help better manage 
accessibility requirements  in web application development 
projects .  implications for  practice are discussed.  
 
keywords  - web a ccessib ility, accessibility  
requirements, information system development project, 
multi-methods 
 
 
i.  introduction 
 
web accessibility refers to web applications 
(including websites) that are usable by all individu als, 
including those wit h disabiliti es.  web applications have 
become an important  element of human life , so it is 
essential that the y be access ible by everyone  regardless of 
disability .  web accessibility creates an inclusive digital 
experience , helps improve the usabi lity of application s for 
all indivi duals [1] and provides alternatives for non-
disabled users [2] .  web  accessibility also fulfills various 
countries ’ legal requirements such as conforming to the 
web content accessibility gui delines (hereafter wca g) 
and relate d frameworks  [3].  although s uch frameworks 
provide  direction for bu ilding accessible web applications , 
development teams continue to deliver digital products 
with limited accessibility  [4]. this may indicate that 
accessibility barri ers continue t o exist , and th at 
appropriate  solut ions have not been applied to the 
development process  of web applications .  in this c ontext, 
a bette r manage ment of accessibility requirem ents during 
web application  development projects should help 
improve  the accessibil ity of the delivered  products . 
the f irst o bjective of this study is  to provide, through 
a structured and comprehe nsive review of relevant 
researc h, a map that integrates  four key logically relate d 
themes  namely , (i) the methods for asse ssing w eb 
accessib ility, (ii) the factors contribu ting to accessibility 
barriers, (iii) the consequences of accessibility barriers 
and (iv) the possible solutions for enhanc ing the 
accessibility of web applications.   the second objective of this study is  to sur vey industry practices related  to the 
them es from that map.   fin dings should help better 
manage accessibility requirements during web application 
development projects and ultima tely improve the 
accessibility of the delivered products .  in the re st of this 
article, section 2 maps the relevant research  on web 
accessibility, section 3 covers the meth odologies used to 
investigat e industry practices, section 4 presents the 
findings , and section 5 discusses them .  
 
 
ii.
 mapping relev ant research  
 
ieee xplore, acm digital libra ry, sciencedir ect, 
and proques t were searched using keyword s relevant  to 
each of the four themes of interest.   a caref ul review of 
all the publicatio ns retrieved helped identify 52 relevant 
pape rs.  two more pertinent papers  found in t he cit ation 
lists of the retained articles were a dded.  in total, 54 
research papers  (not all listed in this paper due  to space 
limitation)  were used to build a map of the key logically 
related  themes covered by relevant research on web 
accessi bility .  in terms of relative imp ortance  in research , 
the m ethods for e valuating web accessibility  are the most 
commonly investigated theme (55.6% of the papers), 
followed by the fac tors contributing  to web accessibility 
barriers ( 31.5% of the papers) , the possible solutions for 
enhancing web accessibility (24.1%  of the papers ) and the 
consequenc es of web accessibility barriers (12. 9% of the 
papers ).  all themes are discussed belo w. 
 a. methods for e valuatin g web accessibility  
 
evaluatin g the ac cessibi lity of a web application  to 
determine wheth er it complies with the accessibility 
guide lines involves va rious as pects , including the use r 
interface,  content, functiona lity, and compatibility wi th 
assistive techno logie s. evaluatio n methods include 
automated  testing to ols and manual testing. auto mated  
testing tools are software designed to (automatically ) 
evaluate the level of accessibil ity of web ap plications 
based on applicable wca g success cr iteria. research 
shows that automated accessi bility testing is th e most 
commonly used evaluation  method and tends to focus on 
identifying the most widely used tools  [3][5][6] .  
in the case of m anual testing , indivi duals -typically 
quality ass urance specialis ts and accessibility specialists - 
assess the accessi bility of web applications base d on  
applica ble r equirements guidelines.  they may use managing  acce ssibi lity requireme nts in web app lication  develop ment 
projec ts: the pe rspectives from research  and the industry  
  
f. nour1, y. benslim ane1, z. yang1 
1scho ol of information techno logy, york univ ersity, toronto, c anada  
faisalskhalifa@ gmail.com, younes@yo rku.ca, zyang@yorku.ca   
 
 
 
 
 
17332023 ieee international conference on industrial engineering and engineering management (ieem) | 979-8-3503-2315-3/23/$31.00 ©2023 ieee | doi: 10.1109/ieem58616.2023.10406733
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:40:41 utc from ieee xplore.  restrictions apply.  
assistive technologies or simulation tools to mimic  the 
experience of users with disabilities  and detect possib le 
accessibility issues and they may also  apply accessibi lity 
metrics  (i.e., q uality ratings ) to assess the a ccessibili ty of 
web applications  [5][6].   research on manual testing 
tends to focus on  the effectiveness a nd efficiency of 
methods , formula , and scales. a possible variation of 
manual testing i s relying on use rs with disabilities to 
assess the accessibility o f web applications . 
 
b. factors contributing to web accessibility ba rriers 
 
research has identified 11  factors linked to  web 
applications with limited accessibility .  the two most 
frequently discussed factors are the lack of accessibility 
considerat ions in th e development  process , as 
stakeholders  -clients includ ed- often ove rlook 
accessibility requireme nts [7][8] or only conside r them if 
legally obligate d [4][9] , and the limitations  of tools used 
for testing [10][11] and of assistive  technologi es expecte d 
to address a ccessibilit y issues [ 12].  two other  key facto rs 
are the la ck of accessibility  awareness am ong it 
professio nals involved in the development proc ess 
[13][14] and the lack of accessibil ity training for such 
professionals  [4][7] [9][10].  both factors can lead 
development teams to wrongly assume all users  can use a 
web application  without any diffic ulties and to continue to 
build applications  with limited accessib ility. 
the other important factors  are the complexity of 
accessibility guid elines , the difficulty  to implement 
accessibility requirem ents, the la ck o f accessi bility 
knowledge  among it profes sionals , and the time 
constraint .  t he complexity  of accessibility  guidelines  
refers to the diff iculty for relevant it profe ssionals, 
particularly no vices, to u nderstand and interpret  
accessibility g uidelines  [10].  in the c ase of the wcag, 
the complexity exte nds to the difficult navigation  of over 
450 p ages with a large number of navigation links on each 
page  [12].  the difficulty  for developers to im plement 
accessibility  refers to advanced technical skills needed  to 
build u ser interface components and wid gets for 
accessi ble web applications [8][10], whe reas the lack of 
accessibility knowledge  -including  relevant challenges 
and guidelines - among develo pers and ux desi gners 
seems quite common [ 7][9]. a s for the lack o f time, 
building, testing  and fixing problems of accessib le web 
applications te nd to  be more time-consuming  [7]. 
finally, r esearch has identifie d the lack  of familiarity 
with assistive technol ogies among it professionals, [ 4], 
the limite d integration of pe ople with  disabilities  in web 
application  development projects [ 15], and the cost 
constra int [10] as the re maining factors  linked to building 
web applications with limited accessibility . 
 c. conseque nces of web accessibility  barriers 
 
accessibility barrier s can  have signifi cant effects  on 
individuals us ing web applicatio ns and on organizations 
that im plement them.  research shows that web applications that meet relevant access ibility requireme nts 
impr ove the user experience and efficiency -as meas ured 
by the tim e users need  to comple te given tasks- for 
individuals regardl ess of their disabilities , but that 
accessibility barriers have a negative impact on usability 
and user experience [1 ].  f indings suggest that web 
accessibility can also bene fit non -disabled users [2].  as 
for organizations , they  could face legal compl ications, 
such as lawsuit s or fin es, for failing to comply with 
applicable accessibility laws and regulations  [3]. 
 
d. soluti ons for enha ncing web accessibility 
 
different factors c an contribute to accessibility 
barrier s and no single solut ion addresses  all accessibility 
barriers at once.  research has identified 7 possible 
solutions  that address the different accessi bility barriers . 
a f
irst solutio n is the use of relevant technological 
tools  such as visual impairment  simulat ors or dyslexia 
simulator s that help develop ers simula te the exper ience of 
people with disabilities  and become more a ware  of the 
accessibility ch allenges imposed by the web appli cations 
they build [ 10]. this solution can also involve  the use of 
more effective refactoring tools that check source code, 
detect accessibility er rors and automa tically fix  them [16].   
a se cond solution is introducing  new phases in the 
application development process t o specifically  address  
accessibility requirements [17].  the new ste ps can focus 
on accessib ility req uirement  elicitation, accessibil ity test,  
access ibility correction  and accessibility  review.  they  
make accessibilit y requir ements a fundamental pa rt of the 
development process  and should help resolve accessibil ity 
issues before deploying web application s to en d users  
[17].  a third solut ion is restruc turing the wcag to help 
with a bett er u nderstanding of the guidelines  and 
ultimately improv e web acces sibility .  o rganizing the 
guidelines based on related job t itles ( i.e., analyst, 
desig ner, develope r, etc.), simplifying  the langua ge and 
facilitat ing the search for sp ecific content should  help it 
professional s better unde rstand a nd implement 
accessibility req uirements [10].  a fourth solution is 
increasing the number of accessibil ity specialist in  web 
application developm ent teams  [10][12].  accessibility 
specialists great ly benefi t develop ment  teams, particularly 
in areas that ca nnot be addressed using  accessibility too ls 
[10].  a fifth  solution  is increasing accessibility awarenes s 
among all application development stakeholders , because 
if they all understand web  accessibility, t hey are more 
likely to prioritize it in thei r work,  resultin g in the 
development o f p ro ducts with improved accessibility [ 12].  
increasing exposure to p eople  with disabiliti es and 
emphasi zing the value of web  accessibility helps  increas e 
acces sibility aware ness [ 12].  th e last two solution s are 
enforcing accessibility  law and  regulat ions as legal 
obligations can be the primary reason why organ izatio ns 
consider digital accessibility [ 9][12] and integrati ng users  
with disabilities in the deve lopm ent process as t his gives 
development t eams bet ter insig hts into the challen ges 
faced by use rs w ith impai rmen ts when interacting with 
1734
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:40:41 utc from ieee xplore.  restrictions apply.  
web applications  and would help develop digital produc ts 
with improved accessibility [13]. 
 
 
iii. me thodo log ies for analyzing related 
indus try prac tices 
 
  a survey and a content analys is were used to analyze 
indus try pra ctices relate d to the web accessibility  themes 
covered in section 2.   the survey of it pro fessional s 
involved in the development of a ccessible web 
applications used seven-point likert  scales (1 = stro ngly 
disagree,  4 = neutral, 7 = strongly agree)  to measure all 
the variables related to th e web accessibility themes  this 
study focuses on.  table 1 present s the variables included 
in the questionnai re.  a pool of it profes sionals with 
relevant job titles and exper tise working  in north america  
was contact ed through linkedin  in march 2023, and 35 of 
them returned valid questionnai res. 
the content  analysis o f 60 relevant jo b postings helped 
identif y the specific abilities needed for  it profe ssionals 
expected t o effectively manage  accessibi lity requir ements 
in web application development proj ects.  t he 
employment websites  monster.co m and indeed .com were 
selected as the source fo r the postings bec ause of their 
popularity .  the key word s “web access ibility ” and 
“digital accessibil ity” in the field “job title s” were used 
to extract relevant posting s published in may 2023.  the 
analysis focused on the skills  spec ific to web accessibil ity, 
so “generic ” skills like  “attention to deta ils” or “effective 
communicati on” required for virtually  any position  were 
not considered .  the calculated frequencies indicate the 
number of times a partic ular skill o r working knowledg e 
is mentioned in each of the postings analy zed. 
  
iv. finding s 
 
a. descriptive statistics from the survey 
 
in terms of sample  characteristics, t he respondent s 
were software devel opers (37.1%) , quality assurance  
specialists (20%),  system analysts  (8.6%) , project 
managers (5. 7%) or other  (28.6%) , had on average 9.3 
years of exper ience and worked for large  (42.9% ), 
medium -sized (34 .3%) and small ( 22.8%) organizations .   
findi
ngs in table 1 show  that, with regards to 
stand ards (item 1 to 3) , respondents tend to follow  formal 
web accessibility guidelines in their li ne of work (mean = 
5.09), to be familiar  with the wcag  (mean = 5.6 0), to 
apply them (mean = 5.37) and to achieve a rather  high 
level of web access ibility  for the applications th ey help 
build as measur ed hereafter by the mean score of items  4 
to 7 (mean score = 5.1 7).  an analysis of frequencies  
show s also that 65. 7% of  the respondents report applying 
the wcag and 62.7% report delive ring accessible web 
application s.  as for the  methods for assessing  the 
accessibilit y of web applications  (item 8 to 10) , 
respondents identified  man ual testing using simulation tools or accessibility metrics as the m ost e ffective m ethod 
(mean = 5.63 ), followed by a utomated tes ting (mean = 
5.26), and relying on the accessibi lity evaluations by users 
with disabilities (mean = 5.03).   
concerning the accessibility b arrier s (item 11 to 20), 
findings show t hat the lack of accessibility awareness 
(mean = 6 .77), of accessibil ity training (mean = 6.63), and 
of accessibility know ledge among it  professionals  (mean 
= 6.54 ) and the lack of accessib ility co nsidera tion in the 
development process (mean = 6 .54) are the most 
significa nt factors contributing to building web 
applications with limited  accessibility .  to a lower degree, 
findings show that lack of famili arity with assistiv e 
technologi es, the complexity of accessib ility gu idelin es, 
and the limited integration of people with disabilitie s into 
devel opment proj ects (the means fo r each of the three 
factors vary  between 5.06 and 5.60) are also a 
contrib uting fa ctor to  accessibility barriers. as for  the 
limitatio ns of testing tools , the difficulty for de velopers to 
implement access ibility  requirements , the cost constraint  
and the time constraint , they are reported as the least 
contributing f actors (the means for each of the four factors 
vary between 4.66 and 4.91). 
these w eb accessibility barriers  ultimat ely affect users 
and organizations  (item 22  to 24) . averages show that  the 
primary consequence  is usability challenges  for users  
(mean = 6.40 ), followed by the negative impact on  end-
user satisfaction  (mean =  6.20) and the increased risk of 
legal complicat ions for organizations (mean = 5.74 ). 
finally, with respect to enhanc ing the accessibility of 
web a pplication s (item 25 to 31), average score s show 
that th e top three most reported solutions are increasing 
acces sibility awareness among  all stakeholders  (mean = 
6.54), increasing the number o f access ibility specialis ts in 
the development process  (mean = 6.40), and us ing 
relevant t echnol ogical to ols d uring t he development 
process  (mean = 6.2 0).  these ar e followed b y enforcing 
applicable laws and regulations  (m ean = 5.89), 
restructuring the wca g (mean = 5.37) , introduc ing new 
phases in the development process to specifically address 
the accessibi lity re quirements (mean = 5.31 ) and 
integ rating users with disabilitie s in the development 
process in various roles (mean = 5.29). 
 
b. key correlations to web access ibility  
 
pearson correlations  helped identify significant 
association s betwee n the accessibi lity of t he we b 
applications routinely develo ped and the variable s under 
study.   results in table 2 show very strong  correlations to 
following  formal accessibility  guidelines (rho = .812), 
being famili ar with the w cag ( rho = .685), applying the 
wcag (rho =  .797) and, to a lesser degree , to reporting 
manual testing  using tools and metrics  as an effective  
evaluation  metho d (rho = .535).  the other  significant  
correl ation s are to  identifyin g the lack of  accessibi lity 
considerat ion in the development proce ss (rho = . 439) 
and of accessi bility awareness among it professionals 
(rho = . 360) as contr ibuting  to accessi bility  barriers, and 
1735
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:40:41 utc from ieee xplore.  restrictions apply. table 1: descriptive statist ics fo r the va riables under study  
items mean st. dev. 
1. accessibility standard: i follow formal web accessibility guidelines / standards in my line of work  5.09 1.78 
2. accessibility standard: i am familiar with the web content  accessi bility guidelines (wcag)  5.60 1.59 
3. access ibility  standard: i apply the w eb content ac cessibil ity guidelines (w cag)  in my line of work  5.37 1.57 
4. web accessibility: the web applicat ions we develop  are easy to interact with for all user s, including those w ith dis abilities  5.14 1.16 
5. web accessibil ity: the web applications we develop  are easy to navigate for a ll users , including th ose with disabilit ies 5.20 1.05 
6. web access ibility: the web applications we develop  are easy to understand for  all users, including t hose wi th disabilities  5.26 1.06 
7. web ac cessibilit y: the applicatio ns we develop  are compatible with assistive technologi es (e.g., scre en reading  etc.) 4.91 1.31 
8. effective metho d for asse ssing  accessibility of web applications : manu al testing using t ools or  accessibility metrics   5.63 1.14 
9. effectiv e method for assessing acce ssibility of web applications: automa ted testing using tools  5.26 1.44 
10. effective method for asses sing acces sibility of web applications: relying o n the evalu ation by user s with disabilities  5.03 1.68 
11. accessibil ity barr iers in web application dev elopment : lack of accessibility aware ness  6.77 0.49 
12. accessibility  barriers in web application dev elopment : lack of acc essibility training  6.63 0.69 
13. accessibility bar riers i n web application develo pment: lack of  accessi bility  knowledge  6.54 0.78 
14. accessibility barriers in w eb ap plicatio n development: lack of acc essibility consideration in the developmen t process  6.54 0.74 
15. accessibility barriers in web applicat ion dev elopment: lack of famili arity with ass istive t echnologies  5.60 1.21 
16. accessibility barriers in web a pplic ation de velopment: the complexity of accessibility guidelines  5.29 1.40 
17. accessibility barriers in web applica tion develo pment: limite d integ ration of people with di sabilities int o the project  5.06 1.43 
18. ac cessibility barriers in web application  develop ment: limitations of testing  tools  4.91 1.29 
19. a ccessibilit y barri ers in web application development : the difficulty  to implement  access ibility requirements  4.91 1.59 
20. accessibil ity barriers in web applica tion development : cost con straint  4.69 1.69 
21. accessibility barriers  in web application  development: time cons traint  4.66 1.83 
22. consequence of no n-comp liance with access ibility  requirements : usability  challenges  6.40 0.65 
23. consequence of non -compliance with accessibility requirem ents: negative impact on end-user sa tisfaction  6.20 0.75 
24. consequen ce of n on-compliance with accessibility requir ements: risk of legal co mplicat ions for o rganizat ions 5.74 1.14 
25. enhancin g the accessibility of web applications : incr easing accessibil ity awar eness among all stakeholders  6.54 0.74 
26. enhancing the acces sibilit y of web applications : increasing the n umber of ac cessib ility speciali sts in the project  6.40 0.69 
27. enha ncing the accessibility of web appl ications : using r elevant technologi cal tool s during software developmen t 6.20 1.02 
28. enhancing the acce ssibili ty of web applications : strictly e nforcing applicable laws and regulat ions 5.89 1.10 
29. enha ncing the acce ssibilit y of web applications : restructuring the wcag   5.37 1.06 
30. enhancin g the accessibility of web a pplications : adding  steps in the d evelopme nt process  to addre ss accessibility  5.31 1.36 
31. enhancing the acces sibility of web applicat ions: integrat ing user s with disabiliti es in the devel opment process  5.29 1.52 
 
 
reporting increas ing the num ber of accessibility 
speci alists in the developm ent process as an  effective 
solution to en hance web accessibility  (rho = . 362).  
findings f inally  show significa nt corre lations to 
identifying risk of legal complications for organizations 
(rho = . 488) and usability challenges (rho = .4 73) as 
consequ ences  for building web applications that do  not 
meet approp riate accessi bility  requirements . 
table  2: significant correlations to web accessibility  
 
following formal guidelines  
being famili ar with the wcag  
applying the wcag  
manual testing  as an effective method 
lack of consideration as a barrier  
lack of awareness as a barrier  
more specialists as a solu tion 
risk of legal issues as a co nsequence 
usabi lity challenges as a consequence  pearson rho 
.812 (2-tailed sig. < .001) 
.685 ( 2-tailed sig. < .001) 
.797 ( 2-tailed sig. < .001)  
.535 (2- tailed sig. < .001) 
.439 (2- tailed sig . = .008) 
.360 (2-tailed sig. = .0 34) 
.362 (2-tailed sig. = .032) 
.488 (2-tailed sig. = .00 3) 
.473 (2-tailed sig. = .00 4) 
 c. knowled ge requir ed for web acces sibility   
 
although the analyzed postings refer to various 
relevant job titles, the  findings summarized  in table 3 
show that it  professionals  responsible , in their re spective 
positions, for effectively managing access ibility 
requiremen ts in application develop ment projects are very 
often required to have a working kn owledge of f orma l accessibility gu ideline s (96.7%), of evalu ation methods 
and testin g tools  (86.7%) , of web development languages 
and tools (85%)  and of assistive techn ologies (73.3%).   
they are a lso e xpected to have a w orking knowledge of 
user int erface d esign prin ciples (43.3%) and of so ftware 
development methodologie s (33.3%).   finally , variou s 
relevant certifications that validate it pro fessionals ’ 
working  knowledge of accessibility  standards, be st 
practices, tools , and technolo gies can be required (30%) . 
table  3: key knowl edge required for  web accessibility  
 
formal accessibility fram eworks 
evaluation methods and testing tools web devel opment language s and tools  
assistive technologies 
user interface des ign principles 
software development methodologies  
accessibili ty-related certification s  freq uencies (n=60)  
58 (96.7%) 
52 (86.7%)  
          51 (85 %) 
40 (73.3%)  
26 (4 3.3%) 
20 (33.3%)  
         18 (30%) 
 
 
v.  discussion  
 
this stud y builds a map that integrates t he key themes 
covered by resear ch on web accessibility in application 
develop ment projects, analy zes the r elated  industry 
practic es and helps identify some critical aspects  linked to 
an effective mana gement of  accessibility  requirements.   
1736
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:40:41 utc from ieee xplore.  restrictions apply.  
first, accessibility requirements manage ment is improved 
when it profe ssionals involved in web application 
development  project s are familiar with t he wcag  (or a 
related framework ) and they apply its guidelines in  their 
line of  work . clearly, t hose professional s help de velop 
applications with improved accessibility , which expla ins 
why employers, very often, require that candidate s have a 
working knowledge of the wcag (or a related standard ) 
and sometime require a certifica tion that va lidates  that 
ability .  further more, those it professionals tend to be 
more aware of the problems  caused by l ack of 
accessibi lity consideration in the  development process , of 
the insufficient number of accessibility specialists in  that 
process  and of the usability challenges and possible legal 
issues linked to building web applications th at do not 
meet applicable accessibility r equirem ents.  being aware  
of such problems is a first step towards solving them.   
accessib ility requirements management is also 
improved when it profe ssionals  involved in web 
application development  projects  are able to effecti vely 
asses s whether an application meets the wcag (or a 
related standard) relevant  requirements .  this assess ment 
is a fundamental  step in the development of web 
applications  and t his st udy s hows the importance of 
effective manual testing using tools and metrics and its 
strong correl ation  to b uilding web applicati ons with 
improved accessibility .  it show s also that a  working  
knowledge of evaluation methods and testing tools i s, 
overall, the second most require d working knowledge 
(after th at of access ibility standa rds) for it professio nals 
expected to develop  access ible application s. 
finally, a pplying  the wcag (or a relat ed standard ) 
has the potential to  gradually  prom ote other best practices  
or avoid pitfalls captured in the research map and further 
improv e web access ibility . 
 
vi. conclusion  
 
 the purpose of thi s stu dy was to build a m ap that 
integra tes the key logically linked  theme s covered by 
research on  web accessi bility and then to investigate the 
industr y practice related to  each theme and the abilitie s 
web accessibi lity typically requires.  findings show th at a 
better  mana gement of accessib ility requirements in web 
application  development project s sta rts wi th it 
professionals  who have a workin g knowledge  of 
accessibility  standards and effective testi ng methods  and 
apply that knowledge in their line of wor k.;;pment  of a web system  for recognizing  the 
images  taken  by uav
oleh  kriuchenkov 
department  of computer  systems,  networks  and cybersecurity  
of national  aerospace  university  “khai” 
kharkiv,  ukraine,   
o.kriuchenkov@student.csn.khai.edu     
 
vyacheslav  kharchenko  
department  of computer  systems,  networks  and cybersecurity  
of national  aerospace  university  “khai”  
kharkiv,  ukraine  
v.kharchenko@csn.khai.edu   
 olga  morozova  
department  of computer  systems,  networks  and cybersecurity  
of national  aerospace  university  “khai”  
kharkiv,  ukraine  
o.morozova@csn.khai.edu   
 
artem  tetskyi   
department  of computer  systems,  networks  and cybersecurity  
of national  aerospace  university  “khai”  
kharkiv,  ukraine  
a.tetskiy@csn.khai.edu  
kamila  storchak  
department  of software  engineering  of automated  systems  
of state  university  of telecommunications  
kyiv,  ukraine   
kpstorchak@ukr.net  
 
abstract—the paper  focuses  on development  of a web 
system  for recognizing  the images  taken  by uav.  according  
to the concept,  the development  for such  system  includes  
three  main  steps:  development  of machine  learning  model,  
web system  development  and deployment.  first  step was 
taken  from  open -source  ml model  “efficientnetb0 ”. web 
system  developed  using  the python  library  “streamlit”.  for 
the last step deployment  service  “heroku”  was chosen.  basic  
requirements  for the functionality,  architecture  and user  
interface  of the web system  developed  in this project  were  
formed.  
keywords —web system,  machine  learning,  web  
development,  heroku,  streamlit.  
i. introduction  
nowadays  web application s are using  for every  sphere.  it 
is one of the most  popular  and fast-growing  branches  in 
ukraine  it cluster . in today's  information  society,  the web 
system  is an integral  part in any field,  it provides  information  
support  and functionality.  with  the help of web systems,  such 
tasks  as supporting  the brand , providing  information  on the 
internet,  expanding  the potential  audience  of readers,  
increasing  popularity,  informing  the public  and others  are 
solved.  
especially  today,  the great  interest  of it-engineer  is using  
of machine  learning  (ml)  in web development . at the same  
time,  for creating  the modern  web applications  its need  to 
have  front -end, back -end and devops  teams  [1]. 
on the other  hand,  increasing  the using  of unmanned  
aerial  vehicles  (uavs)  [2-3]. in addition,  uav,  also known  
as a drone  or a quadcopter,  is a popular  gadget  in today's  
world  that people  actively  use for aerial  photograp hy. 
at the same  time the problem  of recognizing  the images  
taken  by uav  is very actual  today  [4-6]. the development  of 
a web-based  system  for image  recognition  is relevant  and 
necessary  now,  because  there  are having  many  opportunities  
to use this system.  such  a web system,  the main  content  of 
which  is the recognition  of uploaded  images  taken  by uavs,  
is called  a personalized  web system  of various  directions,  
which  provides  a set of services  to its users.  they  are characterized  by simple  interfaces  and a built-in image  
recognition  system.  
in this work  for image  recognition,  it is proposed  to use 
ml technology  [7-8].  
the purpose  of the study  is to focus  on web 
programming  with ml, which  is using  for development  of 
a web application  for recognizing  the images  taken  by 
uav . 
ii. state  if the  art 
web  design  is one of the most  important  technologies  for 
developing  internet  resources.  a good  website that contains  
useful  information  is the best for promotion  the brand  and has 
convenient  functionality.   
the use of information  systems  at the moment  is gaining  
more  and more  popularity.  every  year,  the volume  of the 
latest  technologies  is only increasing.  accordingly,  the 
number  of users  of information  systems  is also increasing  [9]. 
the service  market  is represented  by various  information  
systems,  and most  often  they are based  on web technologies.   
the implemented  web application  will be a one-page  site 
(landing  page ), which  is currently  gaining  the most  popularity  
[10]. thus,  it is necessary  using  of content  management  
system  (cms),  which  provides  the opportunity  to create  page  
templates  in manual  or automatic  mode.  let's  consider  the 
following  most  popular  cms  for front -end development . 
joomla!  [11] is a free cms  for the development  of 
information  portals,  written  with use of programming  
languages  php and javascript.  this cms  uses mysql  
database  management  system  (dbms ) or other  standard  
industrial  relational  dbms  as database  storage.  it is built on 
a model -view -controller  web application  framework  that can 
be used independently  of the cms  that allows  you to build  
powerful  online  applications.  this software  distributed  under 
the gnu  general  public  license  (gpl)  [12]. 
wordpress  is a site cms  with open -source  code , which  is 
written  in php with use of mysql  as database  server  and 
released  under  the license  gnu  gpl  version  2 [13]. this 2022 12th international conference on dependable systems, services and technologies (dessert) | 979-8-3503-3304-6/22/$31.00 ©2022 ieee | doi: 10.1109/dessert58054.2022.10018785
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:36:52 utc from ieee xplore.  restrictions apply.  
 management  system  was originally  develop ed as a cms  for 
creating  blogs,  but over time the functionality  has increased  
and allowing  the system  to acquire  a tool for creating  
information  resources  and portals  of any complexity.  
wordpress  allows  without  difficult  to extend  the functionality  
of the system  with the help of some  ready -made  modules,  as 
well as yourself  created  extensions.  
drupal  is open -source  cms  uses as data storage  relational  
database  as mysql  or postgresql  and also is written  in php 
[14]. also,  drupal  is the system  with robust  content  
management  tools,  sophisticated  apis  for multichannel  
publishing,  and a track  record  of continuous  innovation . it is 
famous  for its extensive  and constantly  improving  
functionality,  since  it is a web application  framework.  drupal  
is free software  licensed  under  the gnu  gpl  and developed  
by an international  community  of enthusiasts . 
django  is a cms that encourages  rapid  development  and 
clean,  pragmatic  design  and used by thousands  of websites  
and organizations  [15]. django  was designed  to help 
developers  take applications  from  concept  to completion  as 
quickly  as possible.  django  takes  security  seriously  and helps  
developers  avoid  many  common  security  mistakes.  it is a 
powerful  framework  created  using  the python  language  [16-
17], which  is a high-level  and object -oriented  programming  
language . 
streamlit  library  is cms  with an open -source  app 
framework  for machine  learning  and data  science  teams.  it 
is also written  in python  and allows  creating  pages  using  
library  components  (for example,  input,  button,  etc.) [18]. so, 
this csm  was chosen  for developing  the web application  
because  it has deal with ml. 
there  are also many  different  technologies  for creating  the 
back -end part. let’s  consider  some  of them.  
node .js is an open -sourc e, cross -platform  javascript  
runtime  environment  [19]. it is designed  to build  scalable  
network  applications.  it can handle  many  connections  
simultaneously.  almost  none  of the functions  in node.js  work  
directly  with i/o, so the process  never  blocks.  becaus e 
nothing  is blocked  on node.js,  it is easy to develop  scalable  
systems.  
digitalocean  is an american  provider  of cloud  
infrastructures,  headquartered  in new  york  and with data 
centers  around  the world  [20]. digitalocean  has the cloud  
computing  services,  with predictable  pricing,  robust  
documentatio n. 
amazon  web  services  (aws ) also provides  a cloud  
computing  platform  for rent to individuals,  businesses,  and 
governments  on a subscription  basis  [21]. the technology  of 
aws  virtual  machines  allows  subscribers  to have  at their 
disposal  a full-fledged  virtual  cluster  of computers,  which  is 
always  available  via the internet.  
google  cloud  platform  is a set of cloud  services  that run 
on the same  infrastructure  that google  uses for its consumer  
products  [22]. google  cloud  platform  provides  
infrastructure -as-a-service  (iaas)  and serverless  computing  
environments.  
heroku  is a cloud  platform -as-a-service  (paas ) platform  
that supports  a number  of programming  languages.  heroku  is 
owned  by salesforce  [23]. herok u is one of the first cloud  
platforms  and initially  only supported  the ruby  programming  
language,  but now the list of supported  languages  also 
includes  many  others  like python  and php.  heroku  servers  use debian  or ubuntu  (which  is also based  on debian)  
operating  systems.  
heroku  has features  for a developer  to build,  run and 
scale  applications  in a similar  manner  across  most  languages.  
applications  that are run on heroku  typically  have  a unique  
domain  used to route  http  requests  to the correct  application  
container  or dyno  [24]. each  of the dynos  are spread  across  a 
“dyno  grid” which  consists  of several  servers.  all heroku  
services  are hosted  on amazon  elastic  compute  cloud  
(amazon's  ec2)  cloud -computing  platform  [25].  
heroku  provides  services  and tools  for building,  running,  
and scaling  web applications . so, this technology  was chosen  
for creating  the back -end part. 
on the basis  of the general  architecture  of the web 
applications  creation,  after conducting  an analysis  of existing  
developments,  creating  a comparative  characteristic  and 
considering  possible  problems,  it is possible  to formulate  a 
list of requirements  for the web application  to be developed.  
it is necessary  to create  a web application  designed  to 
access  a service  that recognizes  images  taken  by a uav,  
which  is like a one-page  website . 
for the user,  the program  should  perform  the following  
functions:  
a) uploading  a picture;  
b) image  recognition;  
c) output  of the image  recognition  result . 
after  considering  technologies  for front -end and back -end 
parts,  it was decided  that python  must  be used as the 
programming  language  for program  development.  
iii. machine  learning  in web  development  
machine  learning  (ml)  plays  one of the key roles  when  it 
needs  to find a new approach  to solving  old problems  in the 
constant  progress  of technology .  
the impact  of ml is huge  for almost  all areas  of human  
activity  and the purpose  of using  ml products  is to improve  
the productivity  of work  processes  [7-8]. also,  it is solving  
tasks  that require  a great  deal of mental  and intellectual  
effort  from  developers  and discovery  of solutions  for 
problems  impossible  to perform  under  certain  existing  
conditions.   
web  development  has an opportunity  to progress  with use 
of ml capabilities  in projects.  from  analyzing  information  
more  accurately  and correctly  to increasing  development  
capabilities , because  ml has the ability  to organize  processes  
much  more  easily  and productively  [26]. 
there  are many  technologies  based  on ml. one of them  
is the technology  of efficientnet , that was first introduced  by 
tan and le in 2019,  and it is among  the most  efficient  models  
that reaches  accuracy  on image  classification  transfer  learning  
tasks  [27]. 
efficientnet  provides  a family  of models  (b0 to b7) that 
represents  a good  combination  of efficiency  and accuracy  on 
a variety  of scales.  such  a scaling  heuristic  allows  the 
efficiency -oriented  base model  (b0) to surpass  models  at 
every  scale,  while  avoiding  extensive  grid-search  of 
hyperparameters.   
as a result,  the depth,  width  and resolution  of each variant  
of the efficientnet  models  are hand -picked  and proven  to 
produce  good  results,  though  they may be significantly  off 
from  the compound  scaling  formula  [28]. 
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:36:52 utc from ieee xplore.  restrictions apply.  
 iv. сase  study  
the first step in the development  of any software  is the 
development  of its architecture  (fig.  1). in software  
development  terminology,  the term “archite cture” has a very 
vague  meaning.  in general,  this term is close  to the term 
“design” when  talking  about  structural  design  rather  than 
code  design.  if it is generalized,  then the following  stages  
should  be understood  under  this term [29]: 
– division  of the future  software  into minimal  structural  
elements  necessary  for its implementation;  
– sequential  unification  of defined  structural  elements  into 
logical  groups  until a single  integrated  system  is obtained;  
– description  of data structures  that will be used for 
interaction  between  structural  elements  or their groups;  
– description  of connections  between  structural  elements  
or their groups , it means  directions  of data flows  between  
elements  and their content;  
– a description  of the rules  and restrictions  that should  be 
followed  when  writing  the code  and when  deploying  the 
finished  application.  additionally,  having  expanded  the concept  of architecture  
before  the start of development,  it can be added as a last point  
the selection  for each structural  element  or their logical  group  
of the corresponding  software  technology,  or the decision  on 
the need  for own implementation  of such technology  within  
the framework  of the software  being  developed.  
when  developing  a web application , the main  attention  is 
paid to the design  of the web resource.  at the first stage  of 
information  design,  an internal  structure  is created,  taking  into 
account  the fact that future  users  have  the opportunity  to 
simply  navigate  the presented  resource . 
the web design  process  usually  consists  of three  parts:  
– development  of the resource  concept,  where  the main  
ideas  are put forward,  as well as an analysis  aimed  at 
identifying  the needs  of end users;  
– logical  design,  where  a scenario  of future  work  is 
formed,  probable  portal  pages  and hypertext  links  between  
them  are described  and methods  of enlivening  pages  with the 
introduction  of multimedia  are considered;  
– physical  design,  direct  web application  creation.  
 
 
fig. 1. web  system  architectur e 
 
to create  web system  with spoken  above  technologies  
such as python  as programming  language  and heroku  as 
deployment  platform  it need  to start from  development.  
the client  part was implemented  as a single-page  web 
application  using  the streamlit  library.  it has all general  web 
components  that can be presented  on the web application . in 
our case it has to display  header  with title, button  for 
uploading  image,  field for displaying  image,  button  for 
recogn izing  image  and field for displaying  the result . 
for the web application  developed  within  the framework  
of this project,  it was decided  to combine  several  architectural  
styles  that harmoniously  complement  each other.  
the full concept  of a web application  means  that the 
service  will be based  on a client -server  architecture,  to work  
on the internet.  the server  part was implemented  using  the 
service -oriented  architecture.  the main  service  was the server  
software  that represented  by the heroku  hardware  platform.  
this service  is responsible  for delivering  client -side software  code  to browsers  in response  to client  requests  for the internet  
address  that the web application  have.  
the web application  was designed  in such a way that the 
application  works  correctly  under  various  operating  systems  
(linux,  windows,  ios)  and in various  browsers  (edge,  
google  chrome,  mozilla  firefox,  safari).   
when  developing  the web application , was decided  that 
mostly  neutral  and contrasting  color  solutions  should  be used.  
the basic  design  of the web application  should  be developed  
in a rather  neutral  way.  there  should  not be a large  amount  of 
text information  on the page.  the web application  design  
should  not include:  banners;  a large  amount  of text is merg ed; 
too dark,  too light and aggressive  color  combinations  or 
graphic  solutions.  
web  system  development  lifecycl e (fig.  2) includes  the 
following  steps:  the system  booted  up -> opened  the main  
page  -> uploaded  a picture  -> delete  picture  it or recognize  it 
-> output  the result .  
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:36:52 utc from ieee xplore.  restrictions apply.  
  
fig. 2. user  actions  of developed  web system   
 
it means , when the main  pages  are loaded,  the user has the 
option  of uploading  pictures,  the next step can be two actions:  
1) types  of pictures  
2) recognize  the picture  
if user select  deleting  the picture,  then the user can upload  
another  picture.  after  the image  is recognized,  the user can 
view  the recognition  result.  a similar  process  is available  on 
the mobile  version  of the applicatio n. according  to the conditions,  web application  was 
designed  as landing  page . it includes  all the main  structural  
elements  that are used to download  and recognize  images  
taken  by uav  (fig.  3).  
web  application  development  includes  the process  of 
creating  a web page  layout,  on which  all other  elements  will 
be strung  later.  the composition  includes  main  content  – the 
central  area where  the content  is placed.  
 
 
fig. 3. interface  of web application  
 
at the same  time,  the so-called  structural  blocks  of the 
web application  are formed  – separate  modules,  each of which  
plays  a certain  role and is responsible  for a certain  
functionality  of the resource.  
after  developed  such a system  it has to deploy  it on 
heroku , because  it contains  github  integration  [30]. that’s  
why it is easy to connect  github  account  to heroku  account  and choose  github  repository  in heroku  and deploy  it. but 
before  deploy  it should  be create d configuration  file – procfile  
that tells heroku out deployment  settings.   
when  deployment  is successful  it can go to link for web 
application , and it can begin  recognizing  the images  taken  by 
uav  by opening  the main  pages  and the user has the option  
of uploading  pictures . 
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:36:52 utc from ieee xplore.  restrictions apply.  
 v. conclusions  
in this work,  all the software  tools  that will be used during  
the development  of the web application,  which  is the main  
goal of this project,  were  selected  and described.  
all selected  technologies  are free and open -source  
software.  they  make  it possible,  if necess ary, to make  
changes  to the software  code  of the tools  themselves  to adjust  
them  for the development  of a specific  project.  the chosen  
stack  of technologies  allowed  to quickly  and qualitatively  
develop  a web application,  namely,  an analysis  of front -end 
frameworks  was also carried  out and the streamlit  library  was 
selected,  as well as all the modules  that can be added  to the 
development  of the front -end application  to make  a unique  
and modern  web application.  also,  the analysis  of the back -
end was carried  out, and the technology  heroku  was chosen.  
this project,  namely  the web application,  was designed  
and developed  for recognizing  images  taken  by uavs  on the 
internet.  this system  allows  the user to conveniently  view  the 
collected  information.  
basic requireme nts for the functionality,  architecture , and 
user interface  of the web application  developed  in this project  
were  formed.  
also,  this project  can be used as an additional  middleware  
step in ml recognizing  images  to allow  users  to check  result  
correctness.;;automation of web applicat ion 
development and deployment u sing jenkins: a 
comprehensive ci/cd pipeline for enhanced 
productivity and quality  
 
badisa naveen  
department of computer science  
koneru lakshmaiah education 
foundation  
guntur , india  
naveenbadisa2708@gmail.com   
eda mokshita reddy  
department of computer science  
koneru lakshmaiah education 
foundation  
guntur, india  
mokshitareddyeda@gmail.com    
jayanth krishna grandhi  
department of computer science   koneru 
lakshmaiah education foundation  
guntur, india 
grandhijayanth637@gmail.com   
nulaka srinivasu  
department of computer science  
koneru lakshmaiah educati on 
foundation  
guntur , india   srinivasu28@kluniversity.in   
kallam lasya  
department of computer science   koneru 
lakshmaiah education foundation  
guntur, india lasyakallam111@gmail.com  
sunitha bulla                             
department of computer science  
koneru lakshmaiah education 
foundation  
guntur, india  
sunithabulla@kluniversity.in  
 
abstract— nowadays software developers are building 
web applications, to the main requirement is that it  work 
well, be free from issues and reach users quickly. but 
doing this can be challenging. that is  where continuous 
integration (ci) and continuous deployment (cd) come 
with a concept called jenkins. it has become a vital tool 
for software developers globally becau se of automation.  
this  research study explores the impact of jenkins 
automation on improving web application development 
by automating essential tasks like testing and 
deployment. it also examines notable benefits such as 
early issue detection, increased d eveloper focus, time 
savings, and enhanced reliability. through a practical 
example using the angular framework for web 
applications, this study underscores the considerable 
benefits of integrating jenkins automation. overall, this 
research highlights the importance of jenkins in 
enhancing software development processes, making 
them more efficient and effective.  
keywords — ci/cd pipeline, jenkins automation server, 
web application development, docker containerization, code 
quality, automated testing, linting , software development 
lifecycle, efficiency improvement , early issue detection, 
jenkins integration . 
i. introduction  
 
in the fast -paced landscape of modern software 
development, the demand for web applications that are not 
only robust and efficient but also swiftly delivered to end -
users has reached unprecedented heights [1]. developers are 
tasked with creating applicatio ns that not only cater to a wide 
range of user needs but also adhere to the highest standards 
of quality. however, achieving this equilibrium can be a 
daunting challenge, given the complexities of debugging, 
testing, and continuous deployment in an agile d evelopment 
environment. this is where continuous integration (ci) and   
continuous deployment (cd) strategies, empowered by 
automation, have emerged as a lifeline for developers  
striving to meet these formidable demands [2]. ci/cd 
pipelines are designed to improve the effectiveness of the 
software development by procedure of building, testing and 
deploying. this automation will allow the developers to 
consistently deliver new features and fix the bugs faster by 
reducing the time and effort required for the m anual tasks.  
continuous  integration involves the seamless merging of 
code contributions from multiple developers into a shared 
repository, followed by an automated testing process to 
identify and rectify conflicts and issues at the earliest stages 
of devel opment. continuous deployment takes this concept a 
step further by automating the deployment of code changes 
to production environments, ensuring swift delivery to end -
users. at the heart of these strategies lies jenkins, a pivotal 
tool that has redefined how developers approach web 
application development [3].  
jenkins, an open -source automation server, has rapidly 
evolved into an indispensable asset for software developers 
globally. by orchestrating various stages of the development 
pipeline, from code integration and testing to deployment, 
jenkins eliminates manual interventions, reduces human 
error, and streamlines the development lifecycle. the pivotal 
role of jenkins automation in this context underscores its 
potential to revolutionize web applicatio n development.  
jenkins serves as the backbone of continuous integration 
and continuous delivery (ci/cd) pipelines, facilitating 
seamless integration of code changes, automated testing, and 
deployment to various environments. its user -friendly web 
interface  allows developers, testers, and operations personnel 
to configure and monitor complex workflows with ease, 
reducing manual intervention and increasing overall 
productivity . 
jenkins automation transcends the boundaries of mere 
convenience; it encapsulates a paradigm shift in how proceedings of the international conference on self sustainable artificial intelligence systems (icssas 2023)
ieee xplore part number: cfp22dn7-art; isbn: 979-8-3503-0085-7
979-8-3503-0085-7/23/$31.00 ©2023 ieee 7512023 international conference on self sustainable artificial intelligence systems (icssas) | 979-8-3503-0085-7/23/$31.00 ©2023 ieee | doi: 10.1109/icssas57918.2023.10331631
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:36:35 utc from ieee xplore.  restrictions apply. developers perceive and execute their responsibilities [4]. 
the automation of routine and critical tasks liberates 
developers from the shackles of monotonous manual 
procedures, empowering them to allocate more time and 
cognitive res ources to the creative aspect of their work. in 
doing so, jenkins contributes not only to the efficiency of the 
development process but also to the quality of the end 
product . 
this research study  delves into the profound impact of 
jenkins automation on enh ancing web application 
development. by exploring its benefits through practical 
implementation and analysis, this study  seek to shed light on 
the ways in which jenkins automates essential tasks, enables 
early issue detection, heightens developer focus, sav es time, 
and bolsters overall reliability. through a case study centred  
around the angular framework, the study  unveil the tangible 
advantages of integrating jenkins automation, emphasizing 
its potential to elevate software development processes to 
new hei ghts. 
ii.  literature survey  
 
to gain valuable insights into the impact of jenkins 
automation on web application development, we turn to the 
work of fowler and foemmel [1]. they introduced the 
practice of continuous integration, highlighting the frequent 
integration of code changes and the vital role of automated 
testing in preventing issues at an early stage. this resonates 
with jenkins' core functionality, which automates testing 
processes, aiding developers in spotting and addressing 
problems before they escalate.  
duvall, matyas, and glover [2] explored the benefits of 
continuous integration within agile development teams. 
they emphasized that automation tools like jenkins 
streamline the collaboration process by automatically 
integrating code changes, ther eby reducing the effort 
required for manual integration. this not only accelerates 
development but also enhances team productivity. jenkins, 
by automating integration tasks and facilitating continuous 
feedback, reinforces this collaborative approach.  
farle y and humble [3] extended the concept of 
continuous integration to continuous delivery, where the 
goal is to quickly deliver new software updates to users. 
they highlighted the significance of automation in achieving 
this goal, as manual processes can hind er the pace of 
deployment. jenkins plays a crucial role in automating the 
deployment pipeline, ensuring that new updates are 
efficiently and reliably delivered to end -users, aligning with 
the principles of continuous delivery.  
cawood and gerber [4] specifi cally examined the 
implementation of continuous integration and deployment 
in web applications built using angularjs and node.js. their 
research shed light on the benefits of integrating automation 
tools like jenkins into the development workflow. by 
ensur ing that code changes are consistently tested and 
deployed, jenkins contributes to the creation of stable, high -
quality web applications  
these insights collectively underscore the importance of 
jenkins automation in web application development. early 
issue  detection, efficient team collaboration, rapid software 
updates, and enhanced application stability emerge as 
recurring themes in the literature .  
iii. jenkins automation : an overview  
 
jenkins is a powerful open -source automation server that 
has become a cornerstone in modern software development 
processes [5]. it serves as an orchestration tool that 
automates various aspects of the software development 
lifecycle, from integrating code changes to deploying 
applications. its significance lies in its ability  to alleviate the 
manual burdens faced by developers, enabling them to 
streamline their workflows and deliver higher -quality 
software more efficiently.  
jenkins achieves automation through a structured 
workflow that integrates seamlessly into the developmen t 
process [ 1]. at its core, jenkins automates the process of 
integrating code changes from different contributors into a 
shared repository. this integration triggers an automated 
build process, which involves compiling the code and 
executing a series of te sts to identify issues. once the code 
passes these tests, jenkins automates the deployment of the 
application to staging or production environments.  
 
fig. 1 .  jenkins role in the pipeline  
the adoption of jenkins automation offers a plethora of 
benefits th at significantly impact the efficiency and 
reliability of software development [7]. one of the standout 
advantages is early issue detection. by automatically running 
tests and checks after every code change, jenkins promptly 
identifies defects, allowing de velopers to address problems 
before they escalate. this not only ensures the quality of the 
software but also reduces the effort required for 
troubleshooting later in the process.  
jenkins also contributes to time savings by reducing the 
manual effort neede d for repetitive tasks [8]. developers can 
focus on writing code and designing features instead of 
spending excessive time on integration, testing, and 
deployment tasks. this increased developer productivity 
translates into faster development cycles and qu icker 
delivery of software updates . 
moreover, jenkins automation sharpens developer focus 
by removing the distraction of manual tasks [9]. this enables 
developers to concentrate on creating innovative solutions 
and improving the user experience of the appl ication. 
additionally, the consistency and repeatability of automated 
processes enhance the reliability of the development 
pipeline, ensuring that the software is delivered consistently 
and predictably.  
 
proceedings of the international conference on self sustainable artificial intelligence systems (icssas 2023)
ieee xplore part number: cfp22dn7-art; isbn: 979-8-3503-0085-7
979-8-3503-0085-7/23/$31.00 ©2023 ieee 752
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:36:35 utc from ieee xplore.  restrictions apply. iv. integration of ci/cd  
 
         the integration of je nkins into the development 
workflow involves the establishment of a continuous 
integration and continuous deployment (ci/cd) pipeline. 
in this context, jenkins becomes a key orchestrator of the 
pipeline, automating the entire process from code 
integration to deployment [5] . 
 
           in a typical scenario, as developers commit code 
changes, jenkins automatically detects these changes and 
triggers the ci/cd pipeline. jenkins fetches the latest code, 
compiles it, and performs automated tests to verify its 
quality. this stage ensures that code changes do not break 
existing functionality and maintain code standards . 
 
          after successful testing, jenkins moves on to the 
deployment phase. depending on the setup, jenkins can  
deploy the application to a st aging environment for final 
testing or directly to production. this automated deployment 
ensures that the latest changes are available to users quickly 
and reliably.  
 
      through this integration, jenkins provides visibility into 
the status of the develo pment pipeline. developers can 
monitor the progress of builds, tests, and deployments, 
allowing for early detection of issues and facilitating prompt 
corrective actions. the result is a streamlined and consistent 
workflow that promotes collaboration and ac celerates 
software delivery.  
   
 
 
fig. 2.   ci/c d pipeline  
 
      jenkins pipeline is a powerful tool that takes automation 
a step further by allowing developers to define the entire 
software delivery process as code [5]. this approach, known 
as "pipeline as code," offers a structured and reproducible 
way to define, manage, and automate the steps involved in 
building, testing, and deploying software.  
 
    traditionally, automation in jenkins was achieved 
through configuring jobs using the graphica l user interface. 
jenkins pipeline introduces a more flexible and 
programmable approach. w ith jenkins pipeline, the entire 
workflow is described in code, typically in a file named 
jenkinsfile, which is stored alongside the application's 
source code.  
         implementing a jenkins pipeline involves writing a 
jenkinsfile that outlines the stages of the software delivery 
process. a pipeline can include stages like code checkout, 
building, testing, and deployment. each stage can be 
customized with specific ins tructions, tools, and parameters.  
 
 automating continuous integration and 
continuous deployment pipeline in jenkins involves set ting 
up the configurations by ensuring that the code is 
continuously integrated, tested and deployed.  
 
 
v.jenkins  file 
 
          in the dynamic landscape of contemporary software 
engineering, the jenkins file  emerges as a pivotal enabler of 
seamless continuous delivery, where the entire deployment 
pipeline is codified and automated [5]. jenkin file  embodies 
the essence of "pipeline as code," encapsulating the 
delivery process within a versioned text file that resides 
alongside the application source code. this paradigm shift 
revolutionizes the way development teams orchestrate and 
manage their delivery workflows, bringing a host of b enefits 
that resonate throughout the development lifecycle.  
         
           the adoption of jenkins file  heralds  numerous 
advantages, augmenting the agility and quality of 
continuous delivery practices [10]. by residing within the 
version control repos itory, jenkins file  inherently inherits 
the benefits of versioning, facilitating collaborative code 
reviews, traceable modifications, and audit trails. 
reproducibility and consistency flourish as the pipeline's 
configuration, steps, and dependencies become  part of the 
source code, thus minimizing configuration discrepancies 
across various stages of the development lifecycle. this 
seamless integration between pipeline definition and source 
code fosters collaboration among diverse teams and 
eliminates the "wo rks on my machine" phenomenon.  
     
               creating a jenkins file  revolves around defining 
distinct stages within the continuous delivery pipeline. 
these stages encapsulate tasks such as code checkout, 
building, testing, and deployment. the struct ured syntax of 
jenkins file , be it declarative or scripted, empowers 
developers to succinctly articulate these stages, their 
interdependencies, and the requisite tools.  
          
              the significance of jenkins file’s  impact on modern 
software de livery is substantiated by an array of 
authoritative voices [11][12]. gruver and matyas shed light 
on practical jenkins file  implementations, emphasizing 
integration with version control, thereby safeguarding the 
pipeline's integrity and facilitating colla borative 
improvements. the exposition by quick and davis unveils 
jenkins file’s  contemporary relevance, particularly in the 
context of continuous delivery within kubernetes 
environments .   
       
            creating a jenkins file  revolves around defining 
distinct stages within the continuous delivery pipeline. 
these stages encapsulate tasks such as code checkout, 
building, testing, and deployment. the structured syntax of 
proceedings of the international conference on self sustainable artificial intelligence systems (icssas 2023)
ieee xplore part number: cfp22dn7-art; isbn: 979-8-3503-0085-7
979-8-3503-0085-7/23/$31.00 ©2023 ieee 753
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:36:35 utc from ieee xplore.  restrictions apply. jenkins file , be it declarative or scripted, empowers 
devel opers to succinctly articulate these stages, their 
interdependencies, and the requisite tools.  
 
             in the ever -evolving landscape of software 
engineering, jenkins file  emerges as an influential bridge 
between automation and code, amplifying the c apabilities of 
continuous delivery while fostering collaboration and 
consistency across development teams.  
  
vi. jenkins plugins  
 
          in the realm of automation, jenkins plugins shine as 
indispensable components, enriching the capabilities and 
adaptabili ty of the jenkins automation server [ 5]. by 
offering an extensive assortment of modular extensions, 
these plugins empower developers with the means to 
customize jenkins to cater to a wide spectrum of software 
development requirements.  
 
        jenkins plug ins play a pivotal role in enhancing the 
functionality and adaptability of the jenkins automation 
server, offering a vast array of tools to cater to diverse 
software development needs [5]. these modular extensions 
provide a seamless way to integrate third -party tools, extend 
core functionality, and customize jenkins according to 
specific requirements.    
            the strength of jenkins lies not only in its core 
features but also in its extensibility through plugins. with a 
plugin -driven architecture, dev elopers can augment jenkins 
with functionalities that span from version control 
integrations and build tools to reporting frameworks and 
deployment orchestration.  
 
     integrating plugins into jenkins is a straightforward 
process that involves browsing th e jenkins plugin index, 
selecting the desired plugin, and installing it directly from 
the jenkins web interface. plugins can be configured and 
managed via the jenkins dashboard, allowing users to fine -
tune their behavior and interactions with other tools.  
 
  the advantages of harnessing the jenkins plugin 
ecosystem are multifaceted [6]. first and foremost, the 
adaptability conferred by plugins enables jenkins to 
embrace diverse development stacks, tools, and frameworks, 
making it a versatile asset across va rious projects. 
scalability, a paramount concern in software development, 
becomes streamlined as teams can dynamically augment 
jenkins with plugins that cater to evolving needs. this 
specialization ensures that jenkins remains agile, able to 
adopt speciali zed practices without overburdening its core . 
     
       furthermore, the jenkins community's collaborative 
efforts in plugin development amplify the ecosystem's value 
[13]. joakim verona's comprehensive guide, "jenkins: the 
definitive guide," delves into  the essentials of plugins and 
their integration, providing insights into their pivotal role. 
additionally, "jenkins 2: up and running" by jason smart 
and ian ferguson outlines the significance of plugins in 
extending jenkins' capabilities, ensuring adapta bility and 
efficiency across projects.   
       in essence, jenkins plugins constitutes  an instrumental 
avenue through which automation reaches new dimensions 
of versatility, facilitating seamless integration and tailoring 
to the intricacies of modern softw are development.  
 
steps to follow to automate ci/cd pipeline in jenkins:  
 
1.creating a new  job by clicking on "new item" and 
choosing  the type  of job.  
2.select the version control system which is under the 
"source course management".  
3.choose how you wanted to trigger the build in the "build 
triggers" section.  
4.define the build steps in the "build" section so that we can 
compile code, build commands and test.  
5.after build  step, configure actions in order to achieve 
artifacts.  
6.include unit tests or integration tests  based on the 
application.  
7.use jenkins plugins or scripts to copy the artifacts to a 
server.  
8.configure messages or email notifications to alert the 
stakeholders about build and  deployment results.  
9.define the pipeline script in "jenki nsfile" and configure 
the pipeline.  
10.save the job configuration and monitor the pipeline 
regarding build and deployment status.  
11.increase the efficiency of pipeline by optimizing build 
time and add more tests.  
 
by following the above steps, we can auto mate the ci/cd 
pipeline in jenkins.  
 
vii. advantages of jenkins  
 
     in the dynamic landscape of modern software 
development, jenkins stands as a pillar of efficiency and 
innovation, offering a range of advantages that collectively 
shape the way software proje cts are conceived, developed, 
and delivered.   
      
     one of jenkins' standout advantages is its unparalleled 
automation prowess, a cornerstone that significantly 
enhances development workflows. the automation of tasks 
such as code integration, testing,  and deployment through 
jenkins not only expedites processes but also minimizes the 
risk of human -induced errors, ultimately resulting in more 
reliable and consistent software releases [5]. as developers 
are freed from the burden of manual, repetitive task s, their 
productivity soars, enabling them to dedicate more time and 
attention to crafting high -quality code.  
 jenkins helps in modularizing the pipeline. the 
pipeline will be broken down into smaller and reusable 
pieces which makes the pipeline more effic ient, and it is 
easy to maintain.  jenkins excels in fostering the principles 
of continuous integration (ci) and continuous deployment 
(cd) [1]. by continuously integrating code changes into a 
shared repository and automating testing processes, jenkins 
ensu res that issues are caught early, reducing the likelihood 
of bugs and defects making their way into the final product. proceedings of the international conference on self sustainable artificial intelligence systems (icssas 2023)
ieee xplore part number: cfp22dn7-art; isbn: 979-8-3503-0085-7
979-8-3503-0085-7/23/$31.00 ©2023 ieee 754
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:36:35 utc from ieee xplore.  restrictions apply. the automated deployment capabilities of jenkins further 
empower teams to release updates swiftly and confidently, 
enhancing the user exp erience and ensuring a seamless 
software delivery pipeline.  
   
          early issue detection is a cornerstone benefit of 
jenkins that contributes to software stability and quality. by 
automating testing and verification of code changes, jenkins 
acts as a  vigilant gatekeeper, identifying problems in their 
infancy and allowing developers to rectify them before they 
escalate [10]. this proactive approach not only prevents 
last-minute crises but also cultivates a culture of continuous 
improvement.  
   
           jenkins also shines as a hub of collaboration and 
transparency within development teams [2]. with its 
centralized dashboard, team members gain insights into 
building  statuses, test results, and deployment processes, 
facilitating open communicati on and swift decision -making. 
this transparency fosters a sense of ownership and 
responsibility among team members, as they collectively 
work toward delivering top -notch software  [14]. 
   
          jenkins encapsulates the essence of efficiency, 
quality, and collaboration that modern software 
development demands. its automation prowess, support for 
ci/cd practices, early issue detection capabilities, and 
collaborative features position it as an invaluable asset for 
development teams striving to meet the de mands of today's 
rapidly evolving software landscape  [15]. 
 
viii. results and analysis  
 
        to evaluate the effectiveness of jenkins in automating 
various stages of development, a practical pipeline was 
executed using the angular framework for web applicatio ns. 
the pipeline consisted of several stages, including  lint 
docker file , test  stage , build ing a docker image and 
publishing  image  to jfrogartifactory  
 
 
  
fig. 3.   jenkins pipeline executed stages.  
 
        the pipeline execution demonstrated successful 
automation of each stage. code compilation ensured that the 
codebase was syntactically correct and adhered to coding 
standards. automated testing, a crucial aspect of the 
development process, allowed for comprehensive testing of 
the application's functiona lities. jenkins seamlessly handled 
the deployment process, moving the application from the 
staging environment to the production environment once all 
tests passed successfully.   
 
fig. 4.   jenkins pipeline with each stage  console output  
 
in the above figure, the jenkins pipeline stages are visible, 
and their results are evident in the console output. utilizing 
this jenkins stage enables the execution of essential 
commands automatically, resulting in considerable time 
savings.  
 
 
observations:  
1. early i ssue detection: the automated testing stage 
facilitated the early detection of issues, ranging from syntax 
errors to functional discrepancies. this aligns with the 
research's emphasis on finding problems early in the 
development process.  
 
2. developer focus and time savings: w ith jenkins 
handling important  tasks such as code compilation, testing 
and deployment, developers were able to allocate more time 
to designing and refining the application's features. this 
aligns with the research's obser vation that jenkins 
automation frees up developers to create better applications.  
 
3. streamlined processes : the seamless execution of each 
pipeline stage showcased the efficiency gains achieved 
through automation. jenkins simplified complex tasks such 
as deployment, reducing the likelihood of manual errors.  
 
ix. conclusion  
 
this research highlights the significant role of 
jenkins automation in enhancing web application 
development. by integrating ci/cd, jenkins simplifies 
processes and improves efficiency. a p ractical example 
using the angular framework demonstrated how jenkins 
handles important tasks effortlessly, showcasing the power 
of automation. it helps developers by catching problems 
early and making sure everything works smoothly. by 
automating these st eps, developers can focus on making 
better applications and save time. also, it simplifies tasks, 
improves efficiency, and ultimately empowers developers to 
create better applications. the results of this research have 
shown that using jenkins to automate the development of 
web applications is a highly effective approach.  
 
 
 
proceedings of the international conference on self sustainable artificial intelligence systems (icssas 2023)
ieee xplore part number: cfp22dn7-art; isbn: 979-8-3503-0085-7
979-8-3503-0085-7/23/$31.00 ©2023 ieee 755
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:36:35 utc from ieee xplore.  restrictions apply.;;cation development model with security 
concern in the entire life-cycle  
 
musa bala shuaibu, phd. ruqayyat ahmad ibrahim 
department of computer science and engineering department of science and technology 
yanbu university college, university of jos 
p.o. box 31387, yanbu industrial city, saudi arabia. plateau state, nigeria 
dandaloto@gmail.com ruqayyat_musa@yahoo.com 
 
 abstract  - e-commerce involves a great deal of credit cards, 
fund transfers, web shopping, and other forms of transmitting 
private information that needs to remain secure. although, the 
knowledge of how to develop a secure e-commerce application is known, the major concern is the insufficiency of the right 
developmental model and practice. the use of inappropriate 
methodology in developing an e-commerce application can seriously undermine organizations’ confidentiality and integrity. having said that, many of the web application development 
models may have some kind of security considerations that may 
not be applied across the entire web application development life-cycle. this is unfortunate. this study proposes a web 
application development model that inculcates security 
considerations across the web application development life-cycle which can be adapted by security critical applications like 
the e-commerce sites. the implementation and evaluation of this 
proposed model, with previous web application security development models, have shown that a 96 percent security level 
is achieved, despite some four percent failures. the failures are of 
information severity status, which are not typically critical to the 
security of the underlying application.  
 
 index terms – web application development life-cycle; web 
engineering; application layer; security; e-commerce. 
 
i.  introduction  
 the concept of secure software development emerged 
when practitioners who relied upon firewalls and intrusion 
detection systems finally understood that it is better to produce a secure system at the very beginning than to embrace defenses after deployment [1]. this understanding directed the attention 
of researchers on improving the development process by 
considering security as a requirement, instead of a corrective measure or after thought issue.  though, software development teams have realized the need for immediate software security, unfortunately, many applications use the traditional ‘penetrate 
and patch’ approach for security. 
 security is one attribute of both software and web applications that should always be carefully considered. a simple defect in 
software or web can leave users open to attackers who find 
such defect for exploitation. thus, there is a need for an appropriate development methodology to be created. this must consist of security considerations in order to avoid 
vulnerabilities that can be inherited at any stage of the web 
application development life-cycle. in other words, the risk is high for architectural and design security flaws to be present 
if an adequate job of identifying flaws is not completed.  open web application security project [2] contends that four out of the current top ten vulnerabilities in the web application layer are due to improper input validation, which is a serious security breach. this error can result in compromise of data or an escalation of privileges, which may further result in revenue leakage and reputational damage for an organization. furthermore, it has been argued by practitioners that security 
breaches or vulnerabilities in the web application layer has 
nothing to do with secure socket layer or firewalls. attackers are savvy enough to penetrate an application as legitimate users, but if safety programming methods are used the security breaches could be avoided or, in the least, reduced[3]. 
“reference [4] argues that web application vulnerabilities are 
most obvious in web application code, not on the underlying technology”. however, technologies, such as a fire-wall or intelligent detection and prevention systems, offer 
comparatively secure protection when achieved at the host and 
network layers. “reference [5] added that strategies are crucial to the design of defense mechanism”.  
practitioners and researchers focusing on the mechanisms of 
building security into web applications have  propounded 
numerous studies, but few provided a security emphasis during the web application development life-cycle. emphasis is 
centered on identifying important threats and dealing with it at 
early stage [6]. thus, this study investigated the state of the art security considerations in web application development models with the need to focus on security issues throughout the life-cycle. 
ii.
 related work 
although the concept of a secure software development 
approach is new in the software industry and among the 
software development community, there are many approaches of developing secure software. three of the well-known approaches are the microsoft's security development life-
cycle (sdl) [7], the comprehensive lightweight application 
security process (clasp) [8], and the software security touch points [9].  even though the approaches differ, the key points remain the same:  
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:43:03 utc from ieee xplore.  restrictions apply. • risk assessment and management is essential in all the 
approaches • utilization of best practices is also crucial • security education is emphasized in all the approaches mentioned.  a few studies discovered in the course of this research, directly inculcates security at each stage of the web application development life-cycle. however, the majority of research considers security only at a single stage of the life-cycle, typically at the beginning, end, or as a complete after thought issue.  for example, [10] uses security testing methodology approaches to look for vulnerabilities and to detect xss in web service. this was accomplished through techniques such as penetration testing and fault injection. in addition, spoofing services and denial of services allowed for vulnerabilities to be located. though the approaches were successful, the concern of inculcating security focus across the development of the life-cycle was not rebutted. this is important in conjunction with e-commerce which is an opportunity for attackers.  studies such as [11] and [12], uses the threat modeling approach to tighten security and to ensure that vulnerabilities are not introduced during software development. other studies, such as [13] use security patterns as a technique for mitigating vulnerabilities. “reference [14] and [15] uses some formal definitions for security mitigation”. “reference [16] have demonstrated how threats can be assessed in a web application, which included details of semantics and context information”. “reference [17] presented an automatic generation of security tests as an approach by using a formal threat model as predicate/transition nets”. this generates all attack paths in the threat model by converting them to executable test codes according to the model-implementation mapping (mim) specifications. though the approach was successful in unveiling various paths and threats, it was somewhat restricted by model implementation.  although all the related techniques mentioned are effective in dealing with vulnerabilities to some extent, the existence of a technique for curbing vulnerabilities is not sufficient to produce a highly secure application if there does not exist a guiding principle to implement the technique [18].  different approaches or techniques are used in some studies to mitigate a specific security threat that may not be applicable when it comes to other threats, it may be more effective if different techniques are combined in security critical applications like e-commerce. the stage in the web application development life-cycle where security approach or technique is emphasized varies with different studies. some studies have considered security checks during requirement gathering, such as[19], other studies, such as [20], and [21], have considered security in the coding stage. although, studies 
that considered security around coding stage of development emphasis the fact that attacks are more likely due to improper coding practices such as sql injection, it is necessary to build security in the entire stage.    furthermore, this study found to the best of its knowledge that [22] and [23] has focus on the security consideration in web application development framework particularly e-commerce. on one hand, ge et al. model investigated general-purpose information system development methods, particularly the feature driven development and risk analysis which was then integrated to address the development of secure web applications. in this approach, risk assessment is fused into agile processes as an engineering method that satisfies the functional requirement for web applications. the joining of these two mechanisms (feature driven and risk analysis) is aimed at mitigating security in web development processes.   on the other hand, sengupta et al. model delved further into the e-commerce domain by putting forth a model for security using a general life-cycle approach which then highlighted perceived threats and vulnerabilities with a proposed framework for mitigation of those perceived threats.   the major challenge is how to fit the security enforcement mechanism into existing models without re-inventing a new web application development life-cycle from scratch that may lead to serious design challenges.   therefore, the inspiration from these related views drive our expedition to answer whether web applications will have an improved security if security concerns are inculcated at each stage of the web application development life-cycle.  it is possible to improve the security of a web application by improving the engineering approach or through process improvement in the development of that application, which will lead to a higher quality and secure product.  
iii.
 methodology  
the methodology therefore, follows two major categories. 
first category involves the following activities: 
 
 selection of web development framework from 
existing web development frameworks 
 building new security framework with checks and 
balances around the web development framework 
 developing a prototype from the new security 
framework and  
 testing the prototype based on security concerns.  
the second category involves evaluation phase for the new security framework with the existing security frameworks for web application using an experiment method known as “within subject design”.  
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:43:03 utc from ieee xplore.  restrictions apply. the implementation focuses on the features that are 
systematically obtained from the design and implementation rules associated with security frameworks because it is expected that the properties built in the frameworks which follows the security description will manifest in the application and then provide the necessary defences.  this study therefore, investigates the security of existing security framework by developing a prototype based on the framework in order to determine what it was and the characteristics or factors which are of interest, then comparing the test result with the prototype of the new security framework that contains interventions.  ideally, a possible causal characteristic have been manipulated, while keeping constant other factors or characteristic. the investigation is hence carried out using penetration and vulnerability assessment of the security breaches in order to measure if the security checks and balances that are incorporated as intervention has any effect on the end result.  our proposed security model considers security at early and throughout the entire life-cycle of web application development. although the model is based on extreme programming (xp) methodology, it is unique in terms of the inculcating security consideration in all the development phases. the inclusion of threat modeling during the design stages, the conduct of code reviews by pair programmers during coding, the use of code-scanning tools and manual testing during the testing phase have demonstrated significant security focus during the life-cycle of web development which is not implemented in other models as detailed in the phases of our proposed web development  model.   the key elements in the phases is the stakeholders collaboration activities at the requirement that ensures a common understanding to be gained among business representatives and development team on security implications, considerations, and requirements which gives an initial thought on key security milestones.  the design specification with security consideration, abstraction of security representation, description of how new vulnerabilities will be introduced in the design are activities proposed as a solution in this study. the result of these activities will highlight the specified security controls provided and areas where further planning or risk mitigation is required.   secure coding practices and security infrastructural enforcement, security best practice violation policies are activities for quick initial review into highlighting errors and potential challenges. the use of small release in iterative manner with acceptance test for evaluation is one of the activities proposed under this study. the solution is flexible in order to accommodate the needs of different applications and web development organizations because it outlines a basic structure that can be easily implemented. the contribution extends to demonstrate that the case study produced as a by-product of the model, after undergoing  penetration testing for security issues by a team that are 
independent from its development group, will have significant security assurance and a reduced rate of external discovery of security vulnerabilities. this is when compared to applications that have not been subject to the same intervention. provided in fig 1 are the phases in a top down manner with iterations in-between phases as indicated by the arrows: 
 
 
 
fig 1: web application development model with security concern 
 
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:43:03 utc from ieee xplore.  restrictions apply. step 1: whole team 
step 2: planning game step 3: simple design step 4: design improvement step 5: coding standard step 6: pair programming step 7: collective ownership step 8: continuous integration  step 9: metaphor step 10: test first development step 11: small release  
iv.
 implementation  
the common practice of e-commerce transaction is through 
the use of third party merchant companies. the merchants companies offer coupon codes as an incentive to buyers to purchase from their web site. the study uses the coupon alternative with the expectation that improved security controls 
will lead more customers to make purchases online without 
inordinate fear of losing their money. the online book store 
application used under this study is a virtual store on the internet that facilitates searching books from a list of categories of books of interest. selections made by the 
customer are grouped together in an online “cart” and later presented as an order at the checkout point where details of the 
customer will then be required in completing the transaction. the user is required to supply details of billing information 
such as shipping address or delivery address and sometimes a discount coupon code. finally, an invoice is generated to 
complete the order and payment. considering the payment gateway obtainable in the third party transaction, a validation process occurs between the shopping cart and the financial establishment by authenticating the information supplied by the customer. this information is then encryp ted and passed 
through a secure channel where it is later sent back as decrypted information to the customers’ shopping cart entity with an appropriate debit or credit balance.  an experienced web development company having a wide market-based reputation that provides valuable and creative services about web design and web development is given the 
task of developing the book store prototype based on two 
security models. prototype 1 is developed based on our proposed security model under this study, while prototype 2 is developed using ge et al. security model.   a three man committee of experienced developers was assigned to implement the security models. the mandates for these individuals were to design and build the end product under the supervision of this study. this study provided guidance in the security aspect and proper definition of model controls.  a weekly meeting was scheduled to discuss and observe progress and subsequently provide clear guidance in any questionable areas of the model. after the implementation of the first model, a questionnaire was presented to the team about the satisfaction of the website developed. the opinions expressed include: clarity of model as a reflection in quality, availability of information to reflect on quality, service quality, 
and security assurances in shopping with the website. the entire team agreed that there was clarity in the model with enough information to back-up the development process. both prototype 1 and 2 case studies were developed using the same website content. however, not all stages in the model were applicable to this particular case study.  the stages in the proposed model such as whole team, planning game, coding standard, pair programming, and test first development are fully implemented during the case study. other stages such as simple design, collective ownership, continuous integration and small release are partially implemented. the reason for partial implementation is due to the nature of the case study which does not encompass a full blown e-commerce application such as amazon.com where every aspect of user connec tion has to be authenticated. 
 hence, our security model constitutes in the design and design improvement stage, an abstraction of how users interact with the system and functions, how vulnerabilities could be introduced, and risk reviewed.   
a. dataset 
a comparison to measure the security between prototype 1 and 
prototype 2 was conducted. the same dataset sample is used for testing the two prototypes. prototype 1 represented the types of security considerations inculcated across the 
development life-cycle of web application for this study. it was hoped that prototype 1 would show improvements in security when compared with prototype 2, for the latter represented the 
kind of systems in use in e-commerce today.  
penetration testing which is believed to be a general 
practitioner standard for determining application strength is used on the two implemented websites. this is used to measure the possibility of an attacker circumventing or violating the 
application defenses. a good result from such penetration testing means gaining more assurances about the security of the web application and further attributing the security 
consideration within the web application development life-cycle.  
bias was avoided by using a black box testing method in 
which the tester knew nothing of the application or defense mechanisms.  the dataset, in this regard, was the aggregation of various 
types of injection techniques and the attack surfaces used to 
circumvent the defense of web application.  this study divided the test cases into 10 categories : 
1. information gathering test 
2. configuration management test 3. authentication test 4. session management test 5. authorization test 6. business logic test 7. input validation test 8. denial of service test 
authorized licensed use limited to: universidade estadual de maringa. downloaded on february 21,2024 at 13:43:03 utc from ieee xplore.  restrictions apply. 9. web service test 
10. ajax test (asynchronous javascript and extended make-up language xml)  the dataset seeks to identify trends currently affecting the security of web applications which will help e-commerce businesses to improve security by highlighting problem areas and to identify areas where specific classes of vulnerability are on the increase. a similar dataset was used in the open web application security project owasp [24] to measure and ascertain the most critical web applica tion vulnerabilities annually. 
 
b. result of prototype 1 compared with prototype 2 
 
as shown in fig 2, out of the 50 test cases planned and 
executed on both prototype 1 and 2, about 96 percent success rate is recorded on prototype 1 as compared to about 29 percent recorded on prototype 2. and 4 percent failure in prototype 1 as compared to 72 percent failure in prototype 2.  
 
 
 
fig 2: comparative success and failure summary 
on one hand, considering only the areas covered by the 96 
percent pass for prototype 1, it is found that the passes are covering 46 percent high severity vulnerability cases, 44 percent medium vulnerability cases, 6 percent low vulnerability cases and 6 percent information vulnerability cases .   this means that the success rate in prototype 1 is more on high and medium severity cases than for low and information severity cases. whereas in contrast to prototype 2 which only has 28 percent pass rate is found to cover medium severity with 36 percent medium severity case, 29 percent information severity case, 28 percent high severity case and 7 percent low severity. this means that the few passes it has achieved is mostly detecting medium and information severity rather than on high severity cases. vi.
 conclusion  
therefore, it is pertinent to mention that since the test cases are 
standardized across both prototypes, the testing was conducted externally to prevent any bias of having prior knowledge of the system rudiments for both prototypes. the same e-commerce implementation with the same functional features is administered. this study ascertains, based on the result that a significant level of security is by far attributed to the effect of inculcating security considerations during the web application development life-cycle and that websites will have improved security if security concerns are inculcated at each stage of the development life-cycle of the web application as the case in prototype 1.  by extension, the result provides  the security assurances to 
critical web applications despite not having a perfect 100 
percent result, as a result of some limitations of the study.   furthermore, it is pertinent to state that existing security web 
applications are still vulnerable to some form of attacks due to lack of security consideration throughout the stages of the development life-cycle. and vulnerability trend could be attributed to enormous funding on technology and functionality rather than security issues in web application development processes.  our major contribution is the provision of a solution to the security challenges faced by most web application in which security considerations are an afterthought issue.  
a
cknowledgment  
 we wish to thank professor muhammad muda (universiti 
sains islam malaysia) for his guidance and profound support.;;