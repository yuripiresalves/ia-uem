[
  {
    "title": "Strategies for web application development methodologies",
    "article": "artigos/web/Strategies_for_web_application_development_methodologies.pdf",
    "objectives": [
      "Keywords \u2014XP (Extreme Programming), WCML (Web Mark U p \nLanguage), CORBA (Common Object Request Broker \nArchitecture), AWDWF (Agile Web Development with Web \nFramework)ION \nAn application running on a single machine and benefiting \nits user only i.e., being used for solo purpose, constitute \nsoftware application and an application running on a \nnetwork, providing services to its users on the network itself, \nis called web application.",
      "Thus softwar e \napplication exploits the benefits of some particular \ncomputing platform and works for some particular purpose."
    ],
    "problems": [],
    "methodology": [
      "International Conference on Computing, Communication and Automation (ICCCA2016)  \n \nISBN:  978-1- 5090 -1666-2/16/$31.00 \u00a92016 IEEE              160 \n Strategies for Web Application Development \nMethodologies \nRavi Sharma  \nIT Department  \nAmity University  \nGreater Noida, India  \nRavisrma1988@gmail.com  Shipra Ravi Kumar \nCSE Department \nAmity University \nGreater Noida, India \nShipra.chaudhary85@gmail.com \n \nKeshav Gupta \nSchool of computing science and engineering \nGalgotias University, Greater Noida, India \nkeshavgupta101@gmail.com \n \nAbstract\u2014Web applications have grown very unexpectedly in \nthese recent years but due to difference between web \napplications and software applications, their development \nmethodologies differ in many ways.",
      "The distinction between \nthese two different types of applications acquire for \nintroduction of development methodologies dedicated to web \napplications.",
      "The thesis work represents various development \napproaches and methodologies proposed specially for web \napplications."
    ],
    "contribuitions": null,
    "references": "1. Agile development: An overview; \nhttp://www.richappsconsulting.com/blog/blog-detail/agile-\ndevelopment- an-overview/; Retrieved 9th April, 2013. \n2. Campbell-Kelly, Martin; Aspray, William (1996), \u2015Computer: A \nHistory of the Information Machine\u2016 ; New York: Basic \nBooks. ISBN 0-465-02990-6. \n3. Center of online learning, research and service. \nhttp://www.uis.edu/colrs/learning/technologies/web20/  Retrieved \n20th May, 2013. \n4. D. Ungar and R.B. Smith; \u2015Self: The Power of Simplicity\u2016; Proc. \nOOPSLA 87, ACM Press, New York, 1987, pp. 227- 242. \n5. Dieter Blomme, Nico Goeminney, Frank Gielen and Filip De \nTurck; \u2015A Two Lay er Approach for Ubiquitous Web Application \nDevelopment\u2016; IEEE 2009: Computation World: Future \nComputing, Service Computation, Cognitive, Adaptive, Content, \nPatterns. \n6. Douglas C. Schmidt, Steve Vinoski; \u2015 Object Interconnections: \nAn Introduction to CORBA Mess aging\u2016; SIGS C++ Report \nmagazine, November/December 1998, column 15. \n7. Dr. Dobb, The world of software development; \nhttp://www.drdobbs.com/; Retrieved 9th April, 2013. \n8. Eric J. Byrne; Software Reverse Engineering: A Case Study, \nSoftware \u2014Practice and Experience; Vol. 21(12), 1349 \u20131364 \n(December 1991). \n9. Eun Sook Cho, So0 Dong Kim, Sung Yul Rhew, Sang Duck Lee, \nChang Gap Kim; \u2015 Object-Oriented Web Application \nArchitectures and Development Strategies \u2016; IEEE 1997. \n10. F. Ricca; \u2015Analysis, Testing and Restructuring of Web  \nApplications\u2016; IEEE ICSM 2004.  \nAuthorized licensed use limited to: UNIVERSIDADE ESTADUAL DE MARINGA. Downloaded on February 21,2024 at 13:42:38 UTC from IEEE Xplore.  Restrictions apply.",
    "frequency": [
      [
        "web",
        77
      ],
      [
        "development",
        73
      ],
      [
        "application",
        70
      ],
      [
        "methodology",
        27
      ],
      [
        "based",
        27
      ],
      [
        "object",
        25
      ],
      [
        "agile",
        24
      ],
      [
        "approach",
        19
      ],
      [
        "framework",
        18
      ],
      [
        "figure",
        17
      ]
    ]
  },
  {
    "title": "Advanced web methodology for flexible web development",
    "article": "artigos/web/Advanced_web_methodology_for_flexible_web_development.pdf",
    "objectives": [],
    "problems": [
      "These aspects mean that a large part of the project \ndevelopment time is spent on the technical issues of the various \ntechnologies involved at the expense of specific applications.",
      "Not being a new issue, it is, however, an aspect present in \napplication deve lopment for equipment, whether desktop, \nlabtops, smartphones, or things - running windows, linux, \nmacOS (OS X), Android, iOS, etc.",
      "Several commercial \ndevelopment tools try to solve this problem, for example, Microsoft's Visual Studio, or Idera's Rad Studio  [3]."
    ],
    "methodology": [
      " \n2021 16th Iberian Conference on Information Systems and Technologies (CISTI)  \n23 \u2013 26 June 2021, Chaves, Portugal  \nISBN: 978 -989-54659 -1-0 \n \n \n Advanced web methodology for flexible web \ndevelopment  \nHiuram Antunes  \nISEC/IPC, Instituto Superior de Engenharia, Instituto \nPolit\u00e9cnico de Coimbra  \nDEE, Dep.",
      "This method allows data integration easily \nfrom different manufactures \u2013 for example financial data can be \nat SAP system; users and access rules at Microsoft identity and \naccess management; and specifi c app data at a local database.",
      "The future will go through studying artificial intelligence \nmethodologies for automated writing of web applications in \nterms of this type of applications."
    ],
    "contribuitions": null,
    "references": "[1] Amazon Arduino cloud, \u201cArduin o online\u201d, online: \nhttps://create.arduino.cc/, last visit: 15 -02-2021.  \n[2] Microsoft Visual Studio, \u201cVisual Studio Online\u201d, online: \nhttps://visualstudio.microsoft.com/pt -br/services/github -codespaces/, last \nvisit: 15 -02-2021.  \n[3] Idera, Inc, \u201cRad Studio and FireMo nkey Stencils\u201d, online: \nhttps://www.embarcadero.com/products/, last visit: 15 -02-2021.  \n[4] Oasis, \u201cOdata\u201d, online: https://www.odata.org, last visit: 15 -02-2021.  \n[5] Oracle, \u201cORDS\u201d, online: \nhttps://www.oracle.com/database/technologies/appdev/rest.html, last \nvisit:  15-02-2021.  \n[6] Facebook, \u201cGraphQL\u201d, online: https://graphql.org/, last visit: 15 -02-\n2021.  \n[7] Netflix, \u201cFalcor\u201d, online: https://netflix.github.io/falcor/, last visit: 15 -02-\n2021.  \n[8] Figma, Adobe XD, Sketch, Pencil Project, InVision, online: figma.com; \nadobe.com/pr oducts/xd.html; sketch.com/; invisionapp.com; last visit: \n15-02-2021.  \n[9] CSS frameworks and javascript frameworks, online: materializecss.com; \nbulma.io; getbootstrap.com; chakra -ui.com; tailwindcss.com; material -\nui.com; reactstrap.github.io/, last visit: 15 -02-2021.  \n[10] Developer Roadmap, online: roadmap.sh/frontend, last visit: 15 -02-2021  \n[11] Testing tools, online: mochajs.org; chaijs.com; github.com/avajs/ava; \njasmine.github.io; jestjs.io; cypress.io; enzymejs.github.io/enzyme, last \nvisit: 15 -02-2021.  \n[12] W3C, \u201cAria Aut horingPractices\u201d, online: w3.org/TR/wai -aria-\npractices/#TreeView, las visit: 15 -02-2021.  \n[13]  \nAuthorized licensed use limited to: UNIVERSIDADE ESTADUAL DE MARINGA. Downloaded on February 21,2024 at 13:17:46 UTC from IEEE Xplore.  Restrictions apply.",
    "frequency": [
      [
        "data",
        26
      ],
      [
        "development",
        21
      ],
      [
        "figure",
        20
      ],
      [
        "application",
        15
      ],
      [
        "\uf0b7",
        13
      ],
      [
        "web",
        12
      ],
      [
        "frontend",
        12
      ],
      [
        "framework",
        12
      ],
      [
        "component",
        11
      ],
      [
        "tool",
        10
      ]
    ]
  },
  {
    "title": null,
    "article": "artigos/web/Integration_issues_on_user_interface_based_web_development.pdf",
    "objectives": [
      "This study aims to \ufb01nd a way to ease this\nchallenge with looking at from developer\u2019s perspective.",
      "However, in this study, integration is\nconsidered not only for non-functional requirements, but also\nfunctional requirements."
    ],
    "problems": [
      "So, a critical issue\nis emerged which is called integration.",
      "Therefore,\nanalyzing the code to modify for integrating is a challenge\nfor developers.",
      "This study aims to \ufb01nd a way to ease this\nchallenge with looking at from developer\u2019s perspective.",
      "Another issue is database connection with the mockup\nelements."
    ],
    "methodology": [
      "T HEPROPOSED APPROACH\nA. Overview\nThe approach is based on priority analysis and vector\nrepresentation of the integration processes for ordering them.",
      "The method proceeds iterative and incremental way, so it\nis an agile development method [13] supported life cycle.",
      "To combine the agile development method and model-driven\nmethod is a popular approach due to its \ufb02exible architecture\n[14], [15]."
    ],
    "contribuitions": null,
    "references": "[1] T. G. Lewis, F. Handloser, S. Bose, and S. Yang, \u201cPrototypes from\nstandard user interface management systems,\u201d Computer, vol. 22, no. 5,\npp. 51\u201360, 1989.\n[2] J. M. Rivero, J. Grigera, G. Rossi, E. R. Luna, F. Montero, and\nM. Gaedke, \u201cMockup-driven development: providing agile support for\nmodel-driven web engineering,\u201d Information and Software Technology,\nvol. 56, no. 6, pp. 670\u2013687, 2014.\n[3] J. Zhang and J.-Y . Chung, \u201cMockup-driven fast-prototyping\nmethodology for web application development,\u201d Software Practice &\nExperience Journal, 33 (13), 2003, pp., vol. 33, no. 13, 2003.\n[4] N. Koch, S. Meli\u00e1-Beigbeder, N. Moreno-Vergara,\nV . Pelechano-Ferragud, F. S\u00e1nchez-Figueroa, and J. Vara-Mesa,\n\u201cModel-driven web engineering,\u201d Upgrade-Nov\u00e1tica Journal (English\nand Spanish), Council of European Professional Informatics Societies\n(CEPIS) IX, vol. 2, pp. 40\u201345, 2008.\n[5] G. Rossi, \u00d3. Pastor, D. Schwabe, and L. Olsina, Web engineering:\nmodelling and implementing web applications. Springer Science &\nBusiness Media, 2007.\n[6] K. Khatter and A. Kalia, \u201cIntegration of non-functional requirements in\nmodel-driven architecture,\u201d Fifth International Conference on Advances\nin Recent Technologies in Communication and Computing, 2013.\n[7] D. Ameller, X. Franch, and J. Cabot, \u201cDealing with non-functional\nrequirements in model-driven development,\u201d in Requirements\nEngineering Conference (RE), 2010 18th IEEE International. IEEE,\n2010, pp. 189\u2013198.\n[8] M. V\u00f6lter, T. Stahl, J. Bettin, A. Haase, and S. Helsen, Model-driven\nsoftware development: technology, engineering, management. John\nWiley & Sons, 2013.\n[9] D. C. Schmidt, \u201cModel-driven engineering,\u201d COMPUTER-IEEE\nCOMPUTER SOCIETY-, vol. 39, no. 2, p. 25, 2006.\n[10] J. L. H. Agustin, \u201cModel-driven web applications,\u201d in Science and\nInformation Conference (SAI), 2015. IEEE, 2015, pp. 954\u2013964.\n[11] W. Schwinger, W. Retschitzegger, A. Schauerhuber, G. Kappel,\nM. Wimmer, B. Pr\u00f6ll, C. Cachero Castro, S. Casteleyn, O. De Troyer,\nP. Fraternali et al., \u201cA survey on web modeling approaches for ubiquitous\nweb applications,\u201d International Journal of Web Information Systems,\nvol. 4, no. 3, pp. 234\u2013305, 2008.\n[12] J. A. Hincapi\u00e9 Londo\u00f1o and J. F. Duitama, \u201cModel-driven web\nengineering methods: a literature review,\u201d Revista Facultad de Ingenier\u00eda\nUniversidad de Antioquia, no. 63, pp. 69\u201381, 2012.\n[13] R. C. Martin, Agile software development: principles, patterns, and\npractices. Prentice Hall PTR, 2003.\n[14] S. W. Ambler, The object primer: Agile model-driven development with\nUML 2.0. Cambridge University Press, 2004.\n[15] G. Alpaslan and O. Kal\u0131ps\u0131z, \u201cModel driven web application\ndevelopment with agile practices,\u201d International Journal of Software\nEngineering & Applications, Vol.7, No.5, 2016.\n[16] A. Homrighausen, H.-W. Six, and M. Winter, \u201cRound-trip prototyping\nbased on integrated functional and user interface requirements\nspeci\ufb01cations,\u201d Requirements Engineering, vol. 7, no. 1, pp. 34\u201345,\n2002.\n[17] N. Koch, A. Kraus, C. Cachero, and S. Meli\u00e1, \u201cIntegration of business\nprocesses in web application models,\u201d J. Web Eng., vol. 3, no. 1, pp.\n22\u201349, 2004.\n[18] P. Gupta, R. Mata-Toledo, and M. Monger, \u201cUtilizing asp. net mvc in\nweb development courses,\u201d Journal of Computing Sciences in Colleges,\nvol. 27, no. 3, pp. 10\u201314, 2012.\nAuthorized licensed use limited to: UNIVERSIDADE ESTADUAL DE MARINGA. Downloaded on February 21,2024 at 13:37:57 UTC from IEEE Xplore.  Restrictions apply.",
    "frequency": [
      [
        "process",
        47
      ],
      [
        "code",
        26
      ],
      [
        "development",
        25
      ],
      [
        "model",
        23
      ],
      [
        "integration",
        22
      ],
      [
        "web",
        17
      ],
      [
        "tool",
        15
      ],
      [
        "requirement",
        15
      ],
      [
        "part",
        14
      ],
      [
        "based",
        13
      ]
    ]
  },
  {
    "title": "Progressive Web Applications, a New Way for Faster Testing of Mobile Application Products",
    "article": "artigos/web/Progressive_Web_Applications_a_New_Way_for_Faster_Testing_of_Mobile_Application_Products.pdf",
    "objectives": [
      "\u2014Progressive Web application (PW A) is a rapidly\nemerging technology that aims to provide an intermediate be-tween native applications and web applications.",
      "This study uses an app\ndeveloped for security guards at a university for identi\ufb01cation\nand veri\ufb01cation purposes to support the claims and demonstratethe strengths of PW A.",
      "The nativeapplications are available on the App Store or Play Storeand are installed on devices for development and testingpurposes.",
      "As PW A is still an emerging domain of research, the\npaper aims at providing an overview of the methodology,compare it with traditional development approaches and give\na experimental analysis of advantages with application devel-opment with PW A.",
      "The claims in this study are supported andvalidated using an application developed using PW A that aimsat identi\ufb01cation and veri\ufb01cations of students at the securitygates of a university campus."
    ],
    "problems": [],
    "methodology": [
      "PW As provide\ncertain advantages over traditional web applications, making\nthem easier and faster to build compared to native applications.This paper discusses the PW A methodology, its advantages,and applications in detail.",
      "It also compares PW A with nativeand website application developments and presents PW A as aneffective method for rapid prototyping.",
      "Index T erms \u2014Progressive Web applications, product develop-\nment, user testing, mobile application development, entrepreneur-\nship, software development lifecycle\nI. I NTRODUCTION\nThe traditional method of launching a mobile-based appli-\ncation into the market uses native applications."
    ],
    "contribuitions": null,
    "references": "ve Web Applications, a New Way for\nFaster Testing of Mobile Application Products\n1stAatmaj Mhatre\nDept. Computer Science\nK.J. Somaiya College of Engineering\nVidyavihar , India\nhttps://orcid.org/0009-0006-0795-07132ndSwati Mali\nDept. Computer Science\nK.J. Somaiya College of Engineering\nVidyavihar , India\nhttps://orcid.org/0009-0004-6055-4010\nAbstract \u2014Progressive Web application (PW A) is a rapidly\nemerging technology that aims to provide an intermediate be-tween native applications and web applications. PW As provide\ncertain advantages over traditional web applications, making\nthem easier and faster to build compared to native applications.This paper discusses the PW A methodology, its advantages,and applications in detail. It also compares PW A with nativeand website application developments and presents PW A as aneffective method for rapid prototyping. This study uses an app\ndeveloped for security guards at a university for identi\ufb01cation\nand veri\ufb01cation purposes to support the claims and demonstratethe strengths of PW A.\nIndex T erms \u2014Progressive Web applications, product develop-\nment, user testing, mobile application development, entrepreneur-\nship, software development lifecycle\nI. I NTRODUCTION\nThe traditional method of launching a mobile-based appli-\ncation into the market uses native applications. The nativeapplications are available on the App Store or Play Storeand are installed on devices for development and testingpurposes. However, application development using any nativeapplication requires a considerable amount of cost and time.Many startups do not possess that many resources and thusface delays in product delivery processes. The ProgressiveApp Development (PW A) approach is a great boon in suchscenarios, as the time and effort required to build a PW Aare less when compared to a native application. In essence,a PW A is a web interface with an appearance and behavior\nsimilar to a native mobile app that can be used for application\ndevelopment. The PW As also greatly support rapid prototyp-ing. A Rapid prototype is a small-scale working prototypeof the project in hand that can be used for user testing andconcept validation. Such a prototype must be cost-effective,\nfast and easy to modify. Such prototyping allows startups to\nfail early. Rather than investing time and effort into buildinga native application and then failing, making a PW A rapidprototype is very cost and time-ef\ufb01cient. Moreover, PW As areeasier to change than native apps and hence can be used forA/B testing in the early stages of product development. Thus\nthe most costly process of building a the \ufb01nal product can beshielded from requirements change by using PW As for rapid\nprototyping and testing.\nAs PW A is still an emerging domain of research, the\npaper aims at providing an overview of the methodology,compare it with traditional development approaches and give\na experimental analysis of advantages with application devel-opment with PW A. The claims in this study are supported andvalidated using an application developed using PW A that aimsat identi\ufb01cation and veri\ufb01cations of students at the securitygates of a university campus.\nThe paper is organized as follows: Section I introduces the\npaper. Section II describes the literature survey of progressiveweb applications. Section III offers a new methodology thatreduces the time required for testing of mobile applicationsusing PW As. Section IV describes the advantages of PW As\nover Native applications in the context of rapid prototyping,\nwhile section V describes its advantages over web applications.Section VI presents the experimental results of PW A testingtesting and \ufb01nally, section VII concludes the paper.\nII. L\nITERA TURE SURVEY\nResearchers have been studying and practising more ef-\nfective ways of software development. PW A is one of thestrong candidates of such studies. The PW A concept was \ufb01rstintroduced by Google in 2015. Since then, PW A developmenthas been rapidly gaining popularity [5] [1]. It is considered an\nemerging technology with tremendous potential in the future.\nPW As can be cached easily and increase user engagement[21]. Some popular PW As include Uber, Spotify and Flipcart[9]. PW As are especially bene\ufb01cial for startup enterprises.Many studies have been carried out on PW As that comparethem against traditional native or web applications. Bi\u00f8rn-Hansen and others [11] [12] have scrutinized and comparedPW As against cross-platform app development approaches.They have tested various types of applications for performancewith the help of two case studies. Tandel and Jamadar [22]have discussed the impact of PW A on web development. Theyhave compared the features provided by Naive applications,general applications and PW As. Mole [19] reviewed the dif-ferent issues and challenges in cross-platform developmentand its applications, discussed the approaches that may resolvethese issues and discussed how the PW A addressed the issues.Lee and others [18] have studied the security and privacy ofPW As. They have identi\ufb01ed security and design \ufb02aws in PW Adevelopment. Fournier [14] has compared the performanceof PW A and native applications in terms of smoothness,memory and CPU usage. The results of the study implied that2023 3rd Asian Conference on Innovation in Technology (ASIANCON) \nPune, India. Aug 25-27, 2023\n979-8-3503-0228-8/23/$31.00 \u00a92023 IEEE 12023 3rd Asian Conference on Innovation in Technology (ASIANCON) | 979-8-3503-0228-8/23/$31.00 \u00a92023 IEEE | DOI: 10.1109/ASIANCON58793.2023.10269806\nAuthorized licensed use limited to: UNIVERSIDADE ESTADUAL DE MARINGA. Downloaded on February 21,2024 at 13:42:13 UTC from IEEE Xplore.  Restrictions apply. T ABLE I\nCOMP ARISON AMONG NA TIVE ,W EBSITE AND PW A\nNative Website PW A\nOf\ufb02ine yes No yes\nPush noti\ufb01cation yes No yes\nMobile speci\ufb01c yes No yes\nHome screen access yes No yes\nNo download No yes yes\nNo marketplace No yes yes\nLinkeble and Sharable No yes yes\nLow data No yes yes\nNo updates No yes yes\nPW A, though they have great bene\ufb01ts, were not as smooth\nas Mobile applications on Android. Frankston [15] exploredvarious aspects of PW As. Recently, Fauzan and others [13]have provided a literature review on PW As.\nPW A development has been discussed in various project re-\nviews and theses. Rensema [20] has explained various aspectsof PW A development like compatibility, performance, security,privacy, and user/business impact along with use cases. Lama[17] has discussed the technical details of PW A development\nincluding core tech, design, tools, and technologies. Kerssens[16] has studied the difference in the performance of PW Aswith native and traditional web applications. They have shownthat the performance and energy consumption of a PW Ais at least similar or even slightly better when compared\nto the traditional approaches of Native and Web in mobile\ndevelopment. A summary of all the observations of the studies\ncan be found in table ??.\nV arious sources on the internet provide useful information\non Progressive web applications. Web.dev [9] provides variouscase studies on PW A development. Google\u2019s PW A website [4]\nalso provides various resources for PW A development. In this\nstudy, we aim to utilize PW A for rapid testing of ideas fornew products. To our knowledge, there has been no previousstudy on this speci\ufb01c topic.\nIII. P\nROPOSED METHODOLOGY\nIn this section, we propose a methodology for the testing\nof a mobile application product.\nThe most expensive and time-consuming stage of mobile\napp development is the production stage. Building any featurein the native mobile application requires time. The feature hasto go through stages like development, testing and deployment.However, in the early stages of product development, manyideas fail. This means that if a feature that has been builtdoes not become a success, all time and resources are wasted.PW As can help to minimize this risk of wastage by providinglow-cost testable prototypes of the features. The developmentof a feature in PW A is cheaper when compared to nativeapplications. If new features are built \ufb01rst using PW As, theycan be tested on real users. Moreover, multiple variants of thesame idea can be A/B tested on PW A applications in a veryeasy manner. This testing can be done across all platformson real users. If the feature idea fails, only a small amountof effort is lost. If the idea is a success, then the samefeature can be built on native applications. The time taken\nto build this feature on the native application can be used totest new features in PW A in parallel. This way ensures theminimization of failure risk. The \ufb02owchart above shows theprocess using PW A. The same methodology can be appliedto the initial prototype development and ideation process. Theprocess without PW A is shown in \ufb01gure III. The methodologyproposed is shown in \ufb01gure III.\nFig. 1. Methodology without PW A\nIV . A DV ANT AGES OF PW A OVER NA TIVE APPS\nPW As have numerous advantages. Many of them have been\ndiscussed in detail by many references [11] [17] [19] [5]. In\nthis section, only the advantages of PW A that are relevant tothe context of Rapid prototyping are discussed.\nA. Ease of development\nPW As are seen as a uni\ufb01er between native and web applica-\ntions [11]. Since a progressive web application is built usingthe same tools as websites, thus providing compatibility withits web app versions [5]. Almost every web application can be\neasily converted into a PW A. Recent conversions of web apps\nto PW A for desktops include Y ouTube, Google Drive, Twitter,and Facebook.\nPW As can be built using the exact same tools as any other\nweb application. This provides the following advantages in thecontext of startups -\n2\nAuthorized licensed use limited to: UNIVERSIDADE ESTADUAL DE MARINGA. Downloaded on February 21,2024 at 13:42:13 UTC from IEEE Xplore.  Restrictions apply. Fig. 2. Proposed methodology with PW A\n1) This makes the development process faster.\n2) Less cost of development.3) Less talent is required than native application builders.4) Ease of development provides lesser training time.\nB. Multiplatform\nOne of the most important advantages of PW A for startup\nenterprises is the lesser overhead of development across\nvarious platforms. The write-once-use-anywhere bene\ufb01t ofPW As drastically reduces the cost of development, testing andmaintenance.\n1) Operating systems compatibility: PW As can be con\ufb01g-\nured to be installed on any mobile device as well as desktop.Both IOS [6] and Android systems support PW As in varyingcapabilities. PW A can be installed on Macintosh systems(OSX), Windows OS, and Linux OS variants as well as canbe run through all supported browsers. This power of PW Amakes it a popular choice for various applications that needto be run on mobile as well as desktop [5]. PW As can runon almost all major operating systems and devices includingAndroid and IOS mobiles, Ipads, and Chrome Books.\nThe table IV -B1 summarizes the features provided by PW As\non different platforms. This multiplatform feature makes test-ing across users with various devices easier. Currently, only\nFlutter is the most popular framework with the multiplatformfeature.T ABLE II\nCOMP A TIBILITY OF PW A ACROSS MOBILE FRAMEWORKS .\nFeature Android - Google IOS - Safari\nWeb Push Noti\ufb01cations Available Not Available\nOf\ufb02ine Browsing Available Available\nBackground Synchronization Available Not Available\nApp launching screen Available Not Available\nAdd to the home screen Available Available\nBluetooth Available Not Available\nGeolocation Available Available\nGeofencing Not Available Not Available\nImage Capture Available Available\nVideo Capture Available Available\nHost on Store Available Available\n2) Browser compatibility: Chromium-based browsers pro-\nvide support for PW A on all devices except iOS and iPadOS.As of now, iOS and iPadOS users have to use Safari forinstalling web applications. Firefox does not support PW Aexcept for partial support for Android devices.\nC. No Update is required\nIn the case of native applications, users have to be bothered\nagain and again to update the application. This prevents theapplication from making small and numerous test cycles.Except for Over The Air (OT A) updates, other updates needto be veri\ufb01ed by Google or Apple before they can be im-plemented. This further restricts the time to market for rapid\ntest cycles. All this can be reduced by using PW As whichdo not need frequent explicit updates. PW As can synchronizeand update in the background. More details on the background\nsynchronization of PW A can be found in the study done byBehl and Raj [10]. This feature is very useful for the followingcases -\n1) Testing can be done as frequently as possible.\n2) Features per test can be narrowed down to 1.3) No requirement for testing updates from third-party stores.\nD. Easier A/B testing\nA/B testing is an important method for the development\nof any product. A/B testing helps reduce errors, \ufb01nd the bestideas and reduce guesswork early in the product development\ncycle. Such experiments are done by many large companies\non a routine basis. PW As are far easier to test than nativeapplications. For example, if a certain feature needs to beA/B tested, then only that webpage can be modi\ufb01ed intotwo versions, instead of making two versions of the entireapplication. This modular approach makes the addition of\nnew features as well as A/B testing cost and time-effective.\nBuilding a PW A is similar to building a web application andchanges can be easily performed. This makes it easier for A/Btesting\nE. Low size\nIn the case of prototypes, the brand image is not fully set up.\nDue to the uncertain feature set and large scope of errors in thetesting phase, it is likely that users have not fully subscribedto the product. In such cases, if the application is consuming\n3\nAuthorized licensed use limited to: UNIVERSIDADE ESTADUAL DE MARINGA. Downloaded on February 21,2024 at 13:42:13 UTC from IEEE Xplore.  Restrictions apply. T ABLE III\nSIZE COMP ARISON OF PW A AND NA TIVE APPLICA TIONS\nName PW A Native\nPinterest 1.6 MB 25 MB\nTwitter 252 KB 32 MB\nFacebook 33 KB 69 MB\nFlipcart 370 KB 18 MB\nAmazon 325 KB 57 MB\nTelegram 325 KB 29 MB\na large amount of space in their devices, users may uninstall\nthe applications. However, a PW A takes a very less amount ofstorage space in the application. This is ideal for users who\ndo not have data or storage to download the application. Acomparison between the download size of PW As and theirnative versions can be seen in table IV -E.\nF . Lesser loading time\nPW As are faster than native applications [2]. Due to the\ntransition from server-side to client-side as well as cachinginformation, the loading speed for the application is drastically\nreduced, thus providing a seamless experience to the users. In\na startup scenario where there are multiple competitors andno brand name, reducing the time latency in users is critical.Lesser loading time leads to more user retention and morerevenue. According to a case study, every additional second\nof page load time resulted in 15-20% lower revenue and sales.By reducing this load time, Orange Polska S.A. was able to\nconvert 52% better by optimizing its PW A [9] This is trueeven for the prototyping of the product. Consider the scenariowhere users are installing a new application which they havenever heard of before. The reduction of friction between users\nand the application in such cases will increase the usageof the application. According to a case study, Tinder PW Aincreased the usage of the application when compared to anative application [9].\nG. No third-party stores required\nPW As can be directly installed from the browser. This is\nadvantageous as the app can be tested on real users withouthaving to launch the application on the Apple app store orGoogle Play store. Currently, the App Store requires an annual\nfee of $99, accompanied by a long waiting time till theapplication gets accepted.\nHowever, the most advantageous bene\ufb01t of this feature is\nthat the users are not required to be redirected to the storesto install an application. This makes the cost of attractingconsumers to their mobile website becomes substantially lowerthan the cost of driving app downloads. Convincing users toinstall a PW A directly from a browser is simpler for the usersthan forcing them to go through the app store. App storescan distract users from the \ufb02ow due to network downloadissues and large download times. App stores also providealternative options to users which may include competitors.These disadvantages are prominent for startup applicationswhere getting the user to use the application is of utmostimportance. On the other hand, by using the PW A application,\nthe time of the user does not get wasted. The PW A runs onthe browser directly before installation, thus enabling the userto use the application before installation. Installation of theapplication and usage can occur simultaneously unlike nativeapplications which need to be installed \ufb01rst before usage.According to a case study, the number of transactions forMishiPay increased 10 times by cutting the installation steprequired for native applications [9]. The process of nativeapplication installation is explained in the \ufb02owchart IV -G andthe PW A installation process is explained in \ufb02owchart IV -G.\nFig. 3. Steps to install Native application\nFig. 4. Steps to install PW A\n4\nAuthorized licensed use limited to: UNIVERSIDADE ESTADUAL DE MARINGA. Downloaded on February 21,2024 at 13:42:13 UTC from IEEE Xplore.  Restrictions apply. H. Other Advantages\n1) PWAs are Discoverable: PW As are easier to discover\nthan native applications through mobile browsers. This isuseful for scaling users after testing of idea.\n2) Lesser Skill set required: PW As require the same set as\nweb development. PW As can be built using HTML, CSS andJavascript. This reduces the cost of hiring. The 2022 surveyfor commonly used language among professional developersby stack exchange [8] shows 67.9% responses for Javascript54.93% HTML and 40.08% for typescript. This is very highwhen compared to 33.4% for Java 9.92% for Kotlin, 6.67%for Dart and 5.18% for Swift.\n3) Lesser Mobile Fragmentation: Native mobile applica-\ntions running on different versions of operating systems makesnative application development costly. This can be avoided inthe testing phase by using progressive web applications. PW As\nare affected by fragmentation to a lesser extent when compared\nto native applications [3].\nV. A\nDV ANT AGES OF PW A OVER WEB APPS\nThere are many case studies that describe how companies\nbene\ufb01tted by converting their web applications to PWas.\nGoibibo improved its conversion rate by 60% by converting itsmobile application to a PW A. Blibli improved its revenue by10x by providing PW A for its\u2019 returning users. Nikkei saw 2.3xmore organic traf\ufb01c accompanied by 58% more conversions.Apart from these, many other enterprises like Infobae, voot\nhave bene\ufb01ted from the conversion. In this section, we describe\nthe advantages of PW A over web applications for new producttesting. All these case studies are available at the Web.devwebsite [9].\nA. Instability\nPW As look like Native apps on the app screen. This has the\nfollowing advantages- Provides access point - The Icon in theapp screen is an easy way to access the application users do\nnot have to go to the webpage.1) Reminds users - Acts as a constant reminder to use the app.This is not present in Web applications.2) Noti\ufb01cation remainder in the icon - The number of noti-\n\ufb01cations of the application is clearly visible on the app icon\nattracting users\u2019 attention in case of any noti\ufb01cation.3) Application-like feel - there is very little difference betweenthe feel of native applications and PW As for the users. Thisis not present for mobile applications.Currently, Android devices support the \u2018add to home screen\u2019feature for any website. However, PW As provide advantageslike custom icons on the home screen, default names, noti\ufb01ca-tion icons and splash screens. One example of this is Rakuten24. As a new service, Rakuten 24 increased its performanceby 450% through the use of PW A. One of the key factors\ninvolved in this was its installability [9].\nB. Visibility on Google Play Store\nPW As can also be visible on Google Play Store. This is\nuseful in the later stages of testing when the applicationhas been opened to public usage. Users can search for the\napplication in the Play Store in a similar manner as any nativeapplication. Moreover, applications are indexed and can alsobe advertised in the Play Store in a similar manner as nativeapplications. Currently, this feature is available only on the\nMicrosoft Store and Google Play Store.\nC. Of\ufb02ine performance\nPW As can Cache data and operate of\ufb02ine in a method\nsimilar to Native applications. This is useful for low bandwidthusage. JD.ID improved its mobile conversion rate by 53%with caching strategies, installation, and push noti\ufb01cations [9].Frequently used data like images or home screen assets canbe cached to make the application usable in of\ufb02ine mode.\nD. Service workers.\nService workers are proxy servers that are intermediate\nbetween web applications, the browser, and the network [7].It is a JavaScript \ufb01le which runs separately from the browser.Service workers used in PW As are capable of backgroundprocessing. This ensures an instant and reliable experience forusers, just like native applications. In Twitter PW A, fast userexperience on \ufb01rst load and subsequent views enables usersto view and create Tweets as quickly as possible [9].\nVI. E\nXPERIMENT AL RESUL TS\nTo validate the research \ufb01ndings the experimentation\ninvolved development of A Progressive Web applicationprototype for a university campus application. It involved\na digital Identity Card Portal for security veri\ufb01cation at aUniversity that has over 40,000 students. In order to test theworking of the same, a Progressive Web Application wasdeveloped. The following observations were found during thetesting phase.1) Ease of Development - The PW A prototype was\neasily developed by one single student with minimum skillrequirements. The only skill required was HTML and V anillaJS. The prototype was completed in 20 man-hours2) Multiplatform - Single PW A was suf\ufb01cient for both\niPhone and Android users. Traditional applications could nothave been tested on real iPhone users. It could also be runfrom any computer system in the campus.3)No Update required - Iterative testing could be easily\nperformed due to these features.4)Low size and 5) Lesser Loading time enabled testing\nto be hassle-free on limited bandwidth areas of the campus.Students could use the application in 5-10 seconds only. Onthe other hand, installing a similar mobile application requires2-3 minutes to install. The size of the PW A was only 2Mbwhile a similar mobile application takes 30 MB.6)No APK requirement enabled students to easily access\nthe application through QR codes. This enabled easier testingof the application. QR code leading to the website madethe process of usage and downloading much easier than thetraditional process of APK installation followed by usage.This bene\ufb01t of likability and sharability was one of the most\n5\nAuthorized licensed use limited to: UNIVERSIDADE ESTADUAL DE MARINGA. Downloaded on February 21,2024 at 13:42:13 UTC from IEEE Xplore.  Restrictions apply. profound in the entire process.\n7)Instability Makes it easier for the students to use than a\nwebsite as it can be easily opened directly from the homescreen without much effort.8) Of\ufb02ine performance enabled students to use the\napplication without the requirement of connectivity.\nIn the above case study, progressive web applications played\na vital role in the development of the digital Identity Card Por-tal. The PW A prototype has enabled the testing of the idea intoa small sector of the university. This can be scaled up graduallyand the results of its performance can be incorporated in thefuture versions of the product. A/B testing can be performedeasily on various students to \ufb01nd out what they exactly needand improve the product. All of these activities would havetaken more resources in terms on time and computations hadit been a native or a web-only application.\nBased on these experimental experiences, it can be con-\ncluded that PW A provides bene\ufb01ts of both speed of develop-\nment similar to web applications with interface and featuresof native applications; it can be used for prototyping of nativeapplications before they are built. PW As can be used to createa working model of the \ufb01nal product in a smaller time andat a lower cost. It can be used to test and improve ideas\nat varying scales. The PW A approaches are advantageous\nover native applications especially in the scenario of newbrand inceptions and resources are limited. They can betremendously useful like the scenario discussed in the casestudy, where students/more users were responsible for theproduct development. Thus it can be concluded that PW As\nare a very useful tool for bringing any new app-based product\ninto the market.\nVII. C\nONCLUSION AND FUTURE SCOPE\nThis paper proposes a new methodology that can speed\nup mobile application-based product testing. It also elaboratesadvantages of PW As over traditional applications as well asweb applications in the context of rapid prototyping. The pro-posed methodology reduces risks and time for \ufb01nding product\nmarket \ufb01t. The progressive web applications for testing and\nprototyping of new products can be effectively used to lowerthe risk and failure costs of features in a product at its earlystages. With PW A, the product development, product releaseand testing new features can take place concurrently, thusreducing the initial development costs. This has been made\npossible due to the novel feature of PW As being easier andfaster to develop, cross-platform and easy to deploy. ThusPW As can prove a powerful tool for the rapid development\nof prototypes for especially for start-ups. Instead of investingtime and resources in developing native applications, startupscan now focus on iterating through their ideas at a minimal\ncost.\nThe future scope of this study consists of the study of\nscaling of PW A products. V arious methodologies related to thescaling and native app transition phase of PW A prototypes canbe investigated. V arious aspects of non-LEAN methodologycan be studied in the context of PW A applications. A wareness\nof this methodology needs to be done in startups. Lastly,process metrics need to be established for this methodology.\nR\nEFERENCES\n[1] The history of pwa development \u2014 the pwa book.\nhttps://www.divante.com/pwabook/chapter/02-the-history-of-pwas.\n(Accessed on 05/10/2023).\n[2] How fast is pwa? check this pwa demo to \ufb01gure it out - tigren.\nhttps://www.tigren.com/blog/pwa-demo/. (Accessed on 05/10/2023).\n[3] Hybrid, native, and pwas: Testing your mobile apps for compati-\nbility. https://www.browserstack.com/blog/hybrid-native-pwas-testing-\nyour-mobile-apps-for-compatibility/. (Accessed on 05/10/2023).\n[4] Progressive web apps. https://sites.google.com/view/progressivewebapps/home.\n(Accessed on 05/10/2023).\n[5] Progressive web apps: Escaping tabs without losing our soul \u2014 by\nalex russell \u2014 medium. https://medium.com/@slightlylate/progressive-\napps-escaping-tabs-without-losing-our-soul-3b93a8561955. (Accessedon 05/10/2023).\n[6] Progressive web apps on ios are here \u2014 by maximiliano \ufb01rtman\n(\ufb01rt.dev) \u2014 medium. https://medium.com/@\ufb01rt/progressive-web-apps-on-ios-are-here-d00430dee3a7. (Accessed on 05/10/2023).\n[7] Service worker api - web apis \u2014 mdn. https://developer.mozilla.org/en-\nUS/docs/Web/API/Service\nWorker API.(Accessedon 05/10/2023) .\n[8] Stack over\ufb02ow developer survey 2022.\nhttps://survey.stackover\ufb02ow.co/2022/most-popular-technologies-\nlanguage-prof. (Accessed on 05/10/2023).\n[9] web.dev. https://web.dev/. (Accessed on 05/10/2023).\n[10] Kashish Behl and Gaurav Raj. Architectural pattern of progressive web\nand background synchronization. In 2018 International Conference on\nAdvances in Computing and Communication Engineering (ICACCE) ,\npages 366\u2013371. IEEE, 2018. doi:10.1109/ICACCE.2018.8441701.\n[11] Andreas Bi\u00f8rn-Hansen, Tim A Majchrzak, and Tor-Morten\nGr\u00f8nli. Progressive web apps: The possible web-native uni\ufb01er\nfor mobile development. In WEBIST , pages 344\u2013351, 2017.\ndoi:10.5220/0006353703440351.\n[12] Andreas Bi\u00f8rn-Hansen, Tim A Majchrzak, and Tor-Morten Gr\u00f8nli.\nProgressive web apps for the uni\ufb01ed development of mobile applica-\ntions. In Web Information Systems and Technologies: 13th International\nConference, WEBIST 2017, Porto, Portugal, April 25\u201327, 2017, RevisedSelected Papers 13 , pages 64\u201386. Springer, 2018. doi:10.1007/978-3-\n319-93527-0\n4.\n[13] Reza Fauzan, Ice Krisnahati, Bima Dinda Nurwibowo, and Della Aulia\nWibowo. A systematic literature review on progressive web application\npractice and challenges. IPTEK The Journal for Technology and Science ,\n33(1):43\u201358, 2022. doi:10.12962/j20882033.v33i1.13904.\n[14] Camille Fournier. Comparison of smoothness in progressive web apps\nand mobile applications on android, 2020.\n[15] Bob Frankston. Progressive web apps [bits versus electrons].\nIEEE Consumer Electronics Magazine , 7(2):106\u2013117, 2018.\ndoi:10.1109/MCE.2017.2776463.\n[16] Tjarco Kerssens. Applicability of progressive web apps in mobile\ndevelopment, 2019.\n[17] Narendra Lama. Providing native experiences in mobile with pwa. 2019.[18] Jiyeon Lee, Hayeon Kim, Junghwan Park, Insik Shin, and Sooel Son.\nPride and prejudice in progressive web apps: Abusing native app-like\nfeatures in web applications. In Proceedings of the 2018 ACM SIGSAC\nConference on Computer and Communications Security , pages 1731\u2013\n1746, 2018. doi:10.1145/3243734.3243867.\n[19] Patrick V Mole and PV Mole. Progressive web apps: A novel way for\ncross-platform development. no. September , 2020.\n[20] Dirk-Jan Rensema. The current state of progressive web apps: A study\non the performance, compatibility, consistency, security and privacy, and\nuser and business impact of progressive web apps, 2020.\n[21] Dennis Sheppard and Dennis Sheppard. Beginning progressive web app\ndevelopment. 2017. doi:10.1007/978-1-4842-3090-9.\n[22] Sayali Tandel and Abhishek Jamadar. Impact of progressive web\napps on web app development. International Journal of Innovative\nResearch in Science, Engineering and Technology , 7(9):9439\u20139444,\n2018. doi:10.15680/IJIRSET.2018.0709021.\n6\nAuthorized licensed use limited to: UNIVERSIDADE ESTADUAL DE MARINGA. Downloaded on February 21,2024 at 13:42:13 UTC from IEEE Xplore.  Restrictions apply.",
    "frequency": [
      [
        "pw",
        118
      ],
      [
        "application",
        97
      ],
      [
        "web",
        53
      ],
      [
        "development",
        46
      ],
      [
        "native",
        38
      ],
      [
        "user",
        34
      ],
      [
        "testing",
        29
      ],
      [
        "mobile",
        29
      ],
      [
        "available",
        25
      ],
      [
        "progressive",
        24
      ]
    ]
  },
  {
    "title": "Web Development and performance comparison of Web Development Technologies in Node.js and Python",
    "article": "artigos/web/Web_Development_and_performance_comparison_of_Web_Development_Technologies_in_Node.js_and_Python.pdf",
    "objectives": [],
    "problems": [
      "With the advancement of the internet nowadays, numerous \nsites are encountering new issues, like the challenge of multi-\nuser requests and high concurrency.",
      "With the advancement of the internet nowadays, numerous \nsites are encountering new issues, like the challenge of multi-\nuser requests and high concurrency."
    ],
    "methodology": [
      "This research paper \ndiscusses the process involved in developing a website in past \nand present, development of content delivery over the years, the \nwebsite uses, a website for mobile devices, and performance \ncomparison between two of the most used web backend \ndevelopment technologies, i. e, Node.js and Python.",
      "We've progressed from text \nblocks to content that can be oriented with CSS to pre-made \ntemplates that can be utilized straight with Bootstrap and \nMaterial UI.",
      "This paper focuses \non process involved in developing static and dynamic \nwebsites, development of content delivery over the years, \nwebsite then and now, how mobile websites has rapidly \nevolved and their optimization along with performance \ncomparison between two most famous technologies used in \nweb development i.e, Node.js and Python."
    ],
    "contribuitions": null,
    "references": "[1] Lei,  K.,  Ma,  Y.,  &  Tan,  Z.  (2014).  Perf ormance  Comparison  \nand Evaluation of Web Development Technologies in P HP, Python, \nand  Node.js.  2014  IEEE  17th  International  Con ference  on \nComputational Science and Engineering. Published. \nhttps://doi.org/10.1109/cse.2014.142 \n[2] Miller, C. S., Zheng, J., Connolly, R., & Olagu nju, A. (2013). \nKeeping up with web development trends. Proceedings  of the 14th \nAnnual ACM SIGITE Conference on Information Technol ogy \nEducation. Published. https://doi.org/10.1145/25122 76.2512309 \n[3] Zakas,    N.    C.    (2013).    The    Evoluti on    of    Web Development \nfor Mobile Devices. Queue, 11(2), 30\u201339. \nhttps://doi.org/10.1145/2436696.2441756 \n[4] Craig, B. W. (n.d.). Evolution of Websites: A Darwinian Tale . WebFX \nBlog. Retrieved October 4, 2021, from \nhttps://www.webfx.com/blog/web-design/evolution-of- websites-a- \ndarwinian-tale/ [5] Web Survey Report 2018 . (n.d.). Node.Js. Retrieved October 4, 2021, \nfrom https://nodejs.org/en/user-survey-report/ \n[6] T.Lance, A.Martin and W.Carey, \u201cPerformance Com parison of \nDynamic Web Technologies\u201d, ACM SIGMETRICS Performan ce \nEvaluation Review, Volume 31 Issue 3, December 2003  \n[7] A.Ranjan, R.Kumar, J.Dhar, \u201cA Comparative Study  between \nDynamic Web Scripting Languages\u201d, Data Engineering and \nManagement, 2012. \n[8] J.Hu, S.Mungee, and D.Schmidt, \u201cTechniques for Developing and \nMeasuring High-Performance Web Servers over ATM Net works\", \nProceedings of IEEE INFOCOM, San Francisco, CA, Mar ch/April \n1998. \n[9] S.Tilkov, S.Vinoski, \u201cNode.js: Using JavaScript  to Build \nHighPerformance Network Programs\u201d, IEEE Internet Co mputing, \n2010. \n[10] Arie, D. (2021, May 19). The History of Content Delivery Networks \n(CDN) . GlobalDots. https://www.globaldots.com/resources/ blog/the- \nhistory-of-content-delivery-networks-cdn/ \n[11] Nix, E. (2018, August 31). The World\u2019s First W eb Site. HISTORY. \nhttps://www.history.com/news/the-worlds-first-web-s ite \n[12] Statista. (2021, April 28). Share of global mo bile website traffic \n2015\u20132021. https://www.statista.com/statistics/2771 25/share-of- \nwebsite-traffic-coming-from-mobile-devices/ \n[13] Geekbench 5. (2021, October 3). HP HP Laptop 1 4q-cs0xxx-\nGeekbench Browser. \nhttps://browser.geekbench.com/v5/cpu/10210650 \n[14] D. P. Singh, P. Kaushik, M. Jain, V. Tiwari an d S. Rajpoot, \"Data \nStorage Security Issues in Cloud Computing,\" 2021 I nternational \nConference on Innovative Practices in Technology an d Management \n(ICIPTM), 2021, pp. 216-220, doi: \n10.1109/ICIPTM52218.2021.9388321. \nAuthorized licensed use limited to: UNIVERSIDADE ESTADUAL DE MARINGA. Downloaded on February 21,2024 at 13:37:21 UTC from IEEE Xplore.  Restrictions apply.",
    "frequency": [
      [
        "server",
        36
      ],
      [
        "website",
        33
      ],
      [
        "python",
        25
      ],
      [
        "technology",
        19
      ],
      [
        "cs",
        18
      ],
      [
        "user",
        18
      ],
      [
        "request",
        18
      ],
      [
        "web",
        17
      ],
      [
        "used",
        17
      ],
      [
        "node",
        17
      ]
    ]
  },
  {
    "title": "Web Development of Direct-to-consumer Genetics Testing",
    "article": "artigos/web/Web_Development_of_Direct-to-consumer_Genetics_Testing.pdf",
    "objectives": [
      "Keywords\u2014agile, genetic testing, prototype, website \ndevelopment, wireframingION  \nThe completion of the human genome project in 2003 has \naccelerated the promising progress of genomic medicine and \nresearch for clinical and public health purposes to plan \neffective strategies to understand, diagnose, prevent, and treat \ndiseases based on genetic profiles [1]\u2013[3].",
      "In this paper, we propose a prototype of the wireframing \nprocess to develop a website for DTC genetic testing services, \nemploying a concrete example from the development of \nDNAku website."
    ],
    "problems": [
      "company will send a deoxyribonucleic acid (DNA) test kit to \ncustomers for collecting their DNA samples (blood, hair, \ntissue, saliva, etc.)."
    ],
    "methodology": [
      "Considering the continuous \napplication development via the wireframing method by taking \ninto account the cycle of feedbacks from involved parties, this \napproach can strengthen the infrastructure to sustain DTC \ngenetic business model, which has a niche market in Indonesia.",
      "RELATED WORKS  \n The web applications in clinical and genetic studies \nusually consist of a centralized database and a software \napplication for allowing data management and data analysis \nthat can be accessed and shared by other researchers and \nclinicians.",
      "This \na\npproach is the most common methodology used in \ndeveloping software [17], [31]."
    ],
    "contribuitions": null,
    "references": "[1] M. J. Khoury et al. , \u201cCurrent Priorities for Public Health Practice in \nAddressing the Role of Human Genomics in Improving Population \nHealth,\u201d Am. J. Prev. Med. , vol. 40, no. 4, pp. 486\u2013493, 2011, doi: \nhttps://doi.org/10.1016/j.amepre.2010.12.009. \n[2] J. W. Baurley, C. S. McMahan, C. M. Ervin, B. Pardamean, and A. \nW. Bergen, \u201cBiosignature Discovery for Substance Use Disorders \nUsing Statistical Learning,\u201d Trends Mol. Med. , vol. 24, no. 2, pp. 221\u2013\n235, 2018, doi: https://doi.org/10.1016/j.molmed.2017.12.008. \n[3] B. Pardamean, J. W. Baurley, C. I. Pardamean, and J. C. Figueiredo, \n\u201cChanging colorectal cancer trends in Asians,\u201d Int. J. Colorectal Dis. , \nvol. 31, no. 8, pp. 1537\u20131538, 2016, doi: 10.1007/s00384-016-2564-\nz. \n[4] M. J. Khoury et al. , \u201cFrom public health genomics to precision public \nhealth: A 20-year journey,\u201d Genet. Med. , vol. 20, no. 6, pp. 574\u2013582, \n2018, doi: 10.1038/gim.2017.211. \n[5] I. Yusuf et al. , \u201cGenetic risk factors for colorectal cancer in \nmultiethnic Indonesians,\u201d Sci. Rep. , vol. 11, no. 1, p. 9988, 2021, doi: \n10.1038/s41598-021-88805-4. \n[6] A. Budiarto, B. Mahesworo, J. Baurley, T. Suparyanto, and B. \nPardamean, \u201cFast and Effective Clustering Method for Ancestry \nEstimation,\u201d Procedia Comput. Sci. , vol. 157, pp. 306\u2013312, 2019, doi: \nhttps://doi.org/10.1016/j.procs.2019.08.171. \n[7] C. Mcmahan et al. , \u201cA Bayesian hierarchical model for identifying significant polygenic effects while controlling for confounding and \nrepeated measures,\u201d Stat. Appl. Genet. Mol. Biol. , vol. 16, no. 5\u20136, pp. \n407\u2013419, 2017, doi: https://doi.org/10.1515/sagmb-2017-0044. \n[8] C. Joyner, C. McMahan, J. Baurley, and B. Pardamean, \u201cA two-phase \nBayesian methodology for the analysis of binary phenotypes in \ngenome-wide association studies,\u201d Biometrical J. , vol. 62, no. 1, pp. \n191\u2013201, Jan. 2020, doi: 10.1002/bimj.201900050. \n[9] M. J. Khoury et al. , \u201cMultilevel research and the challenges of \nimplementing genomic medicine,\u201d J. Natl. Cancer Inst. - Monogr. , \nvol. 1, no. 44, pp. 112\u2013120, 2012, doi: \n10.1093/jncimonographs/lgs003. \n[10] Leslie Pray, \u201cDTC Genetic Testing: 23andme, DNA Direct and \nGenelex,\u201d Nat. Educ. , vol. 1, no. 1, p. 22, 2008, [Online]. Available: \nhttps://www.nature.com/scitable/topicpage/dtc-genetic-testing-\n23andme-dna-direct-and-674/. \n[11] \u201cDirect-to-Consumer Genomic Testing,\u201d National Human Genome \nResearch Institiute , 2020. https://www.genome.gov/dna-day/15-\nways/direct-to-consumer-genomic-testing (accessed Aug. 11, 2020). \n[12] \u201cWhat are the benefits and risks of direct-to-consumer genetic \ntesting?,\u201d 2020. \nhttps://ghr.nlm.nih.gov/primer/dtcgenetictesting/dtcrisksbenefits \n(accessed Aug. 12, 2020). \n[13] S. E. Wallace and L. J. H. Bean, \u201cResources for Genetics \nProfessionals \u2014 Direct-to-Consumer Genetic Testing,\u201d GeneReviews \n[Internet], 2019. https://www.ncbi.nlm.nih.gov/books/NBK542335/ \n(accessed Aug. 12, 2020). \n[14] L. Du and S. I. Becher, \u201cGenetic and Genomic Consultation: Are We \nReady for Direct-to-Consumer Telegenetics?,\u201d Front. Genet. , vol. 9, \nno. December, pp. 1\u20138, 2018, doi: 10.3389/fgene.2018.00550. \n[15] \u201cGenetics Indonesia Official Website.\u201d \nhttps://geneticsindonesia.com/ (accessed Aug. 19, 2020). \n[16] J. W. Baurley, A. S. Perbangsa, A. Subagyo, and B. Pardamean, \u201cA \nWeb Application and Database for Agriculture Genetic Diversity and \nAssociation Studies,\u201d Int. J. Bio-Science Bio-Technology , vol. 5, no. \n6, pp. 33\u201342, 2013, doi: 10.14257/ijbsbt.2013.5.6.04. \n[17] J. W. Baurley, A. Budiarto, M. F. Kacamarga, and B. Pardamean, \u201cA \nWeb Portal for Rice Crop Improvements,\u201d Int. J. Web Portals, vol. \n10, no. 2, pp. 15\u201331, 2018, doi: 10.4018/IJWP.2018070102. \n[18] B. Pardamean, J. W. Baurley, A. S. Perbangsa, D. Utami, H. Rijzaani, \nand D. Satyawan, \u201cInformation technology infrastructure for \nagriculture genotyping studies,\u201d J. Inf. Process. Syst. , vol. 14, no. 3, \npp. 655\u2013665, 2018, doi: 10.3745/JIPS.01.0029. \n[19] M. F. Kacamarga, A. Budiarto, and B. Pardamean, \u201cA Platform for \nElectronic Health Record Sharing in Environments with Scarce \nResource Using Cloud Computing,\u201d Int. J. Online Biomed. Eng. , vol. \n16, no. 9, pp. 63\u201376, 2020, doi: \nhttps://doi.org/10.3991/ijoe.v16i09.13187. \n[20] B. Pardamean, T. Utama, and D. R. Fadilah, \u201cModel of Human \nResources for Health Information Systems,\u201d in 2015 2nd \nInternational Conference on Information Technology, Computer, and \nElectrical Engineering (ICITACEE) , 2015, pp. 20\u201325, doi: \n10.1109/ICITACEE.2015.7437763. \n[21] B. Pardamean, K. A. Wibisono, and H. S. Halim, \u201cNutrition \nManagement and Diet Monitoring Information System,\u201d Res. J. Appl. \nSci., vol. 9, no. 7, pp. 412\u2013417, 2014, doi: \n10.36478/rjasci.2014.412.417. \n[22] B. Pardamean, Anindito, A. Djoeang, and N. Tobing, \u201cDisease \nManagement Information System,\u201d Am. J. Appl. Sci. , vol. 10, no. 7 \nSE-Research Article, Jul. 2013, doi: 10.3844/ajassp.2013.724.733. \n[23] Anindito, B. Pardamean, R. Christian, and B. S. Abbas, \u201cExpert-\nsystem Based Medical Stroke Prevention,\u201d J. Comput. Sci. , vol. 9, no. \n9 SE-Research Article, Aug. 2013, doi: \n10.3844/jcssp.2013.1099.1105. \n[24] H. H. Muljo, B. Pardamean, and A. S. Perbangsa, \u201cThe \nImplementation of Online Learning for Early Detection of Cervical \nCancer,\u201d J. Comput. Sci. , vol. 13, no. 11, pp. 600\u2013607, 2017, doi: \nhttps://doi.org/10.3844/jcssp.2017.600.607. \n[25] H. H. Muljo, A. S. Perbangsa, and B. Pardamean, \u201cAssessment of \nOnline Learning Application for Health Education,\u201d Int. J. o , vol. 15, \nno. 12, pp. 69\u201380, 2019. \n[26] H. H. Muljo, A. S. Perbangsa, Yulius, and B. Pardamean, \u201cMobile \nlearning for early detection cancer,\u201d Int. J. Interact. Mob. Technol. , \nvol. 12, no. 2, 2018, doi: https://doi.org/10.3991/ijim.v12i2.7814. \n[27] J. F. R. Rom\u00e1n, C. I\u00f1iguez-Jarr\u00edn, and \u00d3. P. L\u00f3pez, \u201cGenesLove.Me: \nA model-based web-Application for direct-To-consumer genetic \ntests,\u201d ENASE 2017 - Proc. 12th Int. Conf. Eval. Nov. Approaches to \nSoftw. Eng. , no. Enase, pp. 133\u2013143, 2017, doi: \nAuthorized licensed use limited to: UNIVERSIDADE ESTADUAL DE MARINGA. Downloaded on February 21,2024 at 13:41:07 UTC from IEEE Xplore.  Restrictions apply. 10.5220/0006340201330143. \n[28] M. Ruckenstein, \u201cKeeping data alive: talking DTC genetic testing,\u201d \nInf. Commun. Soc. , vol. 20, no. 7, pp. 1024\u20131039, 2017, doi: \n10.1080/1369118X.2016.1203975. \n[29] H. Willever-Farr, L. Zach, and A. Forte, \u201cTell me about my family: A \nstudy of cooperative research on ancestry.com,\u201d ACM Int. Conf. \nProceeding Ser. , no. February, pp. 303\u2013310, 2012, doi: \n10.1145/2132176.2132215. \n[30] Y. Leau, W. K. Loo, W. Y. Tham, and S. F. Tan, \u201cSoftware \nDevelopment Life Cycle AGILE vs Traditional Approaches,\u201d in 2012 \nInternational Conference on Information and Network Technology \n(ICINT 2012) , 2012, vol. 37, no. Icint, pp. 162\u2013167. \n[31] A. Budiarto et al. , \u201cSMARTD Web-Based Monitoring and Evaluation \nSystem,\u201d in 2018 Indonesian Association for Pattern Recognition \nInternational Conference (INAPR) , Sep. 2018, pp. 172\u2013176, doi: \n10.1109/INAPR.2018.8627034. \n[32] \u201cSDLC - Waterfall Model,\u201d 2020. https://www.tutorialspoint.com/sdlc/sdlc_waterfall_model.htm \n(accessed Aug. 19, 2020). \n[33] K. Schwaber and M. Beedle, Agile Software Development with Scrum , \nInt. ed. Pearson Education (US), 2008. \n[34] H. H. Muljo, A. S. Perbangsa, Yulius, and B. Pardamean, \u201cImproving \nEarly Cancer Detection Knowledge through Mobile Learning \nApplication,\u201d Int. J. Online Biomed. Eng. , vol. 15, no. 2, pp. 60\u201370, \n2019, doi: https://doi.org/10.3991/ijoe.v15i02.9678. \n[35] \u201cAgile Development, Wireframes, and User Stories,\u201d WDI Singapore . \nhttps://wdi-sg.github.io/gitbook-2018/01-workflow/user-stories-\nwireframing/readme.html (accessed Aug. 19, 2020). \n[36] S. Gibbons, \u201cDesign Thinking 101,\u201d Nielsen Norman Group , 2016. \nhttps://www.nngroup.com/articles/design-thinking/ (accessed Aug. \n19, 2020). \n \n \nAuthorized licensed use limited to: UNIVERSIDADE ESTADUAL DE MARINGA. Downloaded on February 21,2024 at 13:41:07 UTC from IEEE Xplore.  Restrictions apply.",
    "frequency": [
      [
        "user",
        40
      ],
      [
        "testing",
        35
      ],
      [
        "genetic",
        31
      ],
      [
        "page",
        24
      ],
      [
        "development",
        22
      ],
      [
        "indonesia",
        18
      ],
      [
        "process",
        17
      ],
      [
        "web",
        15
      ],
      [
        "wireframing",
        15
      ],
      [
        "website",
        14
      ]
    ]
  },
  {
    "title": "Managing Accessibility Requirements in Web Application Development Projects: The Perspectives from Research and the Industry",
    "article": "artigos/web/Managing_Accessibility_Requirements_in_Web_Application_Development_Projects_The_Perspectives_from_Research_and_the_Industry.pdf",
    "objectives": [
      "The f irst o bjective of this study is  to provide, through \na structured and comprehe nsive review of relevant \nresearc h, a map that integrates  four key logically relate d \nthemes  namely , (i) the methods for asse ssing w eb \naccessib ility, (ii) the factors contribu ting to accessibility \nbarriers, (iii) the consequences of accessibility barriers \nand (iv) the possible solutions for enhanc ing the \naccessibility of web applications.",
      "The second objective of this study is  to sur vey industry practices related  to the \nthem es from that map."
    ],
    "problems": [
      "The f irst o bjective of this study is  to provide, through \na structured and comprehe nsive review of relevant \nresearc h, a map that integrates  four key logically relate d \nthemes  namely , (i) the methods for asse ssing w eb \naccessib ility, (ii) the factors contribu ting to accessibility \nbarriers, (iii) the consequences of accessibility barriers \nand (iv) the possible solutions for enhanc ing the \naccessibility of web applications."
    ],
    "methodology": [
      "First, i t presents a map that integrates  the methods \nfor assessing web accessibility, the factors contributing to \naccessibility barriers, the consequences of accessibility \nbarriers and  the possible solutions for enhancing the \naccessibility of web applications .",
      "F indings show that \napplying accessibility standards and using effective \nevaluation methods and tools  help better manage \naccessibility requirements  in web application development \nprojects .",
      "Keywords  - Web a ccessib ility, Accessibility  \nrequirements, Information system development project, \nMulti-methods \n \n \nI."
    ],
    "contribuitions": null,
    "references": "[1]  A. Pascual, M. R ibera , T. Granollers  and J.L. Coiduras, \n\u201cImpact of Access ibility Barriers on the Mood of Blind,  \nLow-visio n and Sighted Users\u201d,  Procedia Computer \nScien ce, 27, 2014  \n[2]  S. Schm utz, A. Sonder egger a nd J. Sauer, \"Effects of  \nAccessible Website Design on Non-Di sabled U sers\", \nErgonom ics, 61, 5, 2018  \n[3]  M. Campoverde -Mol ina, S. Lu jan-Mor a and L. V. Garc ia, \n\"Empirica l Studies  on Web Accessibility of Educational Websites: A Sy stematic L iterature Review\", IEEE Access, \n8, 2020 \n[4]  D . Miranda and J. Ara ujo, \"St udying Industry P ractices of \nAccessibility Requirements in Agile Development\", \nACM/SI GAP P Sym posium on Applied Computing , 2022  \n[5]  M.  Cruz-Portilla, J.C. Perez-Arriaga, J. O. Ocharan-\nHernandez and A .J. Sanche z-Garc ia, \"Accessibil ity in the \nSoftware Developm ent Life Cycl e: A Systematic \nLiter ature Review \", International Confe rence in Software \nEngine ering Resear ch and In novation , 2021 \n[6]  A. Bai, V. Stray  and H. Mork, \"What Metho ds Software \nTeams P refer  when T esting Web Accessibili ty\", Advances \nin Human-Co mput er Intera ction, 2019 \n[7]  H.L. Ant onell i, S.S. Rodrigues  and W.M. W atanabe, \"A  \nSurvey on A ccessibility Awareness  of Brazilian Web \nDevelopers\", International Conference on Soft ware \nDevel opmen t an d T echnologi es for Enhancing  \nAccessi bility and Fighti ng Info-Exclusion, 2018 \n[8]  T. Bi, X. Xia, D. Lo, J . Grundy, T. Zimmermann and D. \nFord, \"A ccessib ility in S oftwa re Practice:  A Practitioner 's \nPerspective\", ACM Transactions on Software  Engineering \nand Me thodology, 31, 4,  2022 \n[9]  Y. Inal, F.  Guribye, D. Rajanen,  M. Rajanen and M . Rost, \n\"Perspectives and Pra ctices of Digital Access ibility: A \nSurvey of Use r Experience  Professiona ls in Nordic \nCountries\", Nordic Conference on Human-Computer \nInteraction : Shaping Experienc es and Society, 2020 \n[10] H.Y. Abua ddous, Z.J. Mohd and B. N urlida,  \"Web \nAccessibility Challeng es\", International Journa l of \nAdvanced Comp uter Science an d Applications , 7, 10, \n2016 \n[11]  M. Nagaraju , P. Chawla and A. Rana, \"A Practition er\u2019s \nApproach to Asse ss the WC AG 2 .0 Website Ac cessibility \nChallenges\" , Amity Internat ional Conference on Artif icial \nIntelligence , 2019  \n[12] M . Ku lkarni, \"D igital Accessib ility: Challen ges and \nOpportunities\",  IIMB Management Review, 31, 2019 \n[13]  M. Crabb, M. Hero n, R. Jones,  M. Armstrong, H. Reid  and \nA. Wildson, \"Developing Accessibl e Se rvices :  \nUnderstanding Current Knowl edge and Areas for Fut ure \nSupport\", Conference on Human Factors i n Computing \nSystems , 2019 \n[14]  T . Bi, X. Xi a, D. Lo and  A. A leti, \"A F irst Look at \nAccessib ility Issues in Popular GitHub Projects\", \nInternational Conferenc e on Software Maintenance and \nEvolution , 2021  \n[15]  V. Rubano and F. Vitali, \"Mak ing Accessibility \nAccessible: Strategy and Tools\", Annual Consu mer \nCommunic ations and Networking Confere nce, 2021 \n[16]  I. N. Ikhsan and M.Z. Catur Candra, \"Aut omatically: A n \nAutomated Refactoring Method and Tool for Improving \nWeb  Accessibility \", International Conference on Dat a and \nSoftw are Engine ering, 2018 \n[17]  L. Armas, H. Roja s and R . Renter ia, \"Proposa l for an  \nAccessible Software Deve lopment Model\", International \nConference  of Inclusive Technology and Education, 2020  \n1737\nAuthorized licensed use limited to: UNIVERSIDADE ESTADUAL DE MARINGA. Downloaded on February 21,2024 at 13:40:41 UTC from IEEE Xplore.  Restrictions apply.",
    "frequency": [
      [
        "accessibility",
        113
      ],
      [
        "web",
        107
      ],
      [
        "application",
        61
      ],
      [
        "development",
        36
      ],
      [
        "e",
        30
      ],
      [
        "barrier",
        25
      ],
      [
        "mean",
        24
      ],
      [
        "user",
        21
      ],
      [
        "tool",
        20
      ],
      [
        "testing",
        19
      ]
    ]
  },
  {
    "title": "Development of a web system for recognizing the images taken by UAV",
    "article": "artigos/web/Development_of_a_web_system_for_recognizing_the_images_taken_by_UAV.pdf",
    "objectives": [
      "The purpose  of the study  is to focus  on web \nprogramming  with ML, which  is using  for development  of \na web application  for recognizing  the images  taken  by \nUAV ."
    ],
    "problems": [
      "At the same  time the problem  of recognizing  the images  \ntaken  by UAV  is very actual  today  [4-6]."
    ],
    "methodology": [
      "Such  a web system,  the main  content  of \nwhich  is the recognition  of uploaded  images  taken  by UAVs,  \nis called  a personalized  web system  of various  directions,  \nwhich  provides  a set of services  to its users.",
      "Also,  Drupal  is the system  with robust  content  \nmanagement  tools,  sophisticated  APIs  for multichannel  \npublishing,  and a track  record  of continuous  innovation .",
      "On the basis  of the general  architecture  of the web \napplications  creation,  after conducting  an analysis  of existing  \ndevelopments,  creating  a comparative  characteristic  and \nconsidering  possible  problems,  it is possible  to formulate  a \nlist of requirements  for the web application  to be developed."
    ],
    "contribuitions": null,
    "references": "1. Front -end, Back -end, DevOps  vs Full-stack:  A Developers\u2019  Guide  for \nFounders  and CEOs  [Online].  Available  at: \nhttps://www.masterborn.com/blog/Frontend_vs_backend_guide   \n2. Kliushnikov,  I., Fesenko,  H., Kharchenko,  V., Illiashenko,  O. & \nMorozova,  O. (2021).  UAV  fleet based  accident  monitoring  systems  \nwith automatic  battery  replacement  systems:  Algorithms  for justifying  \ncomposition  and use planning.  International  Journal  of Safety and \nSecurity  Engineering,  Vol. 11, No. 4, pp. 319-328. \nhttps://doi.org/10.18280/ijsse.110404  \n3. Sun, Y.; Fesenko,  H.; Kharchenko,  V.; Zhong,  L.; Kliushnikov,  I.; \nIlliashenko,  O.; Morozova,  O. & Sachenko,  A. (2022).  UAV  and IoT-\nBased  Systems  for the Monit oring  of Industrial  Facilities  Using  Digital  \nTwins:  Methodology,  Reliability  Models,  and Application.  Sensors , \nVol. 22, 6444.  https://doi.org/10.3390/s22176444  \n4. Maji,  S., Rahtu,  E., Kannala,  J., Blaschko,  M., and Vedaldi,  A. Fine-\ngrained  visual  classification  of aircraft.  arXiv  preprint  \narXiv:1306.5151,  2013.  \n5. He, K., Zhang,  X., Ren, S., and Sun, J. Deep  residual  learning  for image  \nrecognition.  CVPR,  pp. 770\u2013778, 2016.  6. Zoph,  B., Vasudevan,  V., Shlens,  J., and Le, Q. V. Learning  \ntransferable  archit ectures  for scalable  image  recognition.  CVPR,  2018.  \n7. Kumari,  V., Harirchian,  E., Lahmer,  T., & Rasulzade,  S. (2022).  \nEvaluation  of Machine  Learning  and Web -Based  Process  for Damage  \nScore  Estimation  of Existing  Buildings.  Buildings,  12(5),  578.  \n8. Chollet,  F. Xception:  Deep  learning  with depthwise  separable  \nconvolutions.  CVPR,  pp. 1610\u201302357,  2017.  \n9. Papadonikolaki,  E., Krystallis,  I., & Morgan,  B. (2022).  Digital  \nTechnologies  in Built  Environment  Projects:  Review  and Future  \nDirections.  Project  Management  Journal , 87569728211070225.  \n10. Landing  page  [Online].  Available  at: \nhttps://mailchimp.com/marketing -glossary/landing -pages/   \n11. About  Joomla!  [Online].  Available  at: https://www.joomla.org/about -\njoomla.html  \n12. GNU  General  Public  License  [Online].  Available  at: \nhttps://www.gnu.org/licenses/gpl -3.0.html  \n13. What  Is WordPress?  [Online].  Available  at: \nhttps://ithemes.com/tutorials/what -is-wordpress/  \n14. Drupal  \u2013 Open  Source  CMS  [Online].  Available  at: \nhttps://www.drupal. org/  \n15. Meet  Django  [Online].  Available  at: https://www.djangoproject.com/   \n16. What  is Python  [Online].  Available  at: \nhttps://docs.python.org/3/faq/general.html#what -is-python  \n17. Python  Docs  [Online].  Available  at: https://docs.python.org/3/   \n18. A faster  way to build  and share  data apps [Online].  Available  at: \nhttps://streamlit.io/  \n19. Node.js  [Online].  Available  at: https://nodejs.org/en/   \n20. DigitalOcean  [Online].  Available  at: https://www.digitalocean.com/   \n21. AWS  [Online].  Available  at: https://aws.amazon.com/   \n22. Google  Cloud  Platform  [Online].  Available  at: \nhttps://cloud.google.com/   \n23. Heroku  [Online] . Available  at: https://www.heroku.com  \n24. HTTP  Routing  [Online].  Available  at: \nhttps://devcenter.heroku.com/articles/http -routing   \n25. Heroku  vs AWS:  comparative  review  [Online].  Available  at: \nhttps://light -it.net/blog/heroku -vs-aws-comparative -review/   \n26. The Impact  of Machine  Learning  on Web  Development  [Online] . \nAvailable  at: https://business -review.eu/tech/it/the -impact -of-machine -\nlearning -on-web-development -227507   \n27. Tan, M., & Le, Q. (2019,  May).  Efficientnet:  Rethinking  model  scaling  \nfor convolutional  neural  network s. In International  conference  on \nmachine  learning  (pp. 6105 -6114).  \n28. Image  classification  via fine-tuning  with EfficientNet  [Online].  \nAvailable  at: \nhttps://keras .io/examples/vision/image_classification_efficientnet_fine\n_tuning/  \n29. Gruner,  Stefan.  On the historical  semantics  of the notion  of software  \narchitecture.  TD: The Journal  for Transdisciplinary  Research  in \nSouthern  Africa  10.1 (2014):  37-66. \n30. GitHub  repository  [Online].  Available  at: \nhttps://github.com/Singlefig/diploma -repo \n \n \nAuthorized licensed use limited to: UNIVERSIDADE ESTADUAL DE MARINGA. Downloaded on February 21,2024 at 13:36:52 UTC from IEEE Xplore.  Restrictions apply.",
    "frequency": [
      [
        "web",
        57
      ],
      [
        "application",
        41
      ],
      [
        "system",
        40
      ],
      [
        "development",
        28
      ],
      [
        "image",
        20
      ],
      [
        "technology",
        18
      ],
      [
        "heroku",
        16
      ],
      [
        "user",
        15
      ],
      [
        "service",
        14
      ],
      [
        "software",
        13
      ]
    ]
  },
  {
    "title": "Efficient Automation of Web Application Development and Deployment Using Jenkins: A Comprehensive CI/CD Pipeline for Enhanced Productivity and Quality",
    "article": "artigos/web/Efficient_Automation_of_Web_Application_Development_and_Deployment_Using_Jenkins_A_Comprehensive_CI_CD_Pipeline_for_Enhanced_Productivity_and_Quality.pdf",
    "objectives": [
      "Through a practical \nexample using the Angular framework for web \napplications, this study underscores the considerable \nbenefits of integrating Jenkins automation.",
      "By exploring its benefits through practical \nimplementation and analysis, this study  seek to shed light on \nthe ways in which Jenkins automates essential tasks, enables \nearly issue detection, heightens developer focus, sav es time, \nand bolsters overall reliability."
    ],
    "problems": [
      "However, achieving this equilibrium can be a \ndaunting challenge, given the complexities of debugging, \ntesting, and continuous deployment in an agile d evelopment \nenvironment.",
      "Continuous  Integration involves the seamless merging of \ncode contributions from multiple developers into a shared \nrepository, followed by an automated testing process to \nidentify and rectify conflicts and issues at the earliest stages \nof devel opment.",
      "By exploring its benefits through practical \nimplementation and analysis, this study  seek to shed light on \nthe ways in which Jenkins automates essential tasks, enables \nearly issue detection, heightens developer focus, sav es time, \nand bolsters overall reliability."
    ],
    "methodology": [
      "By exploring its benefits through practical \nimplementation and analysis, this study  seek to shed light on \nthe ways in which Jenkins automates essential tasks, enables \nearly issue detection, heightens developer focus, sav es time, \nand bolsters overall reliability."
    ],
    "contribuitions": null,
    "references": "[1] Fowler, M., & Foemmel, M , \u201cContinu ous Integration \u201d,2006, Martin \nFowler.  \n[2] DuVall, P., Matyas, S., & Glover, A ,\u201cContinuous Integration in Agile \nTeams \u201d,2007, Addison -Wesley Professional.  \n[3] Farley, D., & Humble, J ,\u201cContinuous Delivery: Reliable Software \nReleases through Build, Test, and Deployment Au tomation \u201d,2010,  \nAddison -Wesley Professional.  \n[4] Cawood, S., & Gerber, A ,\u201dContinuous Integ ration and Deployment \nfor AngularJS and Node. js Applications \u201d,2015, Springer International \nPublishing.  \n[5] Joakim Verona , \u201cJenkins: The Definitive Guide. O'Reilly \nMedia. \u201d,2011  \n[6] Monk, M. \u201dJenkins 2.x Continuous Integration Cookbook \u201d,2016, Packt \nPublishing.  \n[7] Stellman, A., & Greene, J. \u201d Continu ous Integ ration: Improving  \nSoftware Quality and Reducing Risk \u201d,2014,  Pearson Education.  \n[8] Smart, J \u201cContinu ous Delivery: Reliable Software Releases throug h \nBuild, Test, and Deployment Au tomation. \u201d,2011,  Addison -Wesley \nProfessional.  \n[9] Humble, J., & Farl ey, D. \u201cContinuous Delivery: Reliable Software \nReleases through Build, Test, and Deployment \nAutomation \u201d,2010, Addison -Wesley Professional.  \n[10] Smart, J., & Ferguson, I. \u201dJenkins 2: Up and Running. \u201d,2020,  O'Reilly \nMedia.  \n[11] Gruver, T., & Matyas, T. \u201dA Practical Guide  to Jenkins: Get Started  \nWith Jenkins, Git, and Maven \",2019,  O'Reilly Media.  \n[12] Quick, R., & Davis, A. \u201dJenkins X: Continuous Delivery with \nKubernetes \u201d,2020, O'Reilly Media.  \n[13] Silvia Puglisi, Maria Teresa Vlachopoulou, Domenico Amalfitano, & \nPorfirio Tramontana. \u201cEvaluation of Jenkins Plugins for Integration of \nTesting Tools in CI/CD Processes \u201d,2020,  IEEE.  \n[14] Newman, S. \u201dBuilding Microservices: Designing Fine -Grained  \nSystems \",2017, O'Reilly Media.  \n[15] Chambers, D., Harris, I., & K\u00f6hler, S ,\u201cJenkins, The Ultimate \nGuide\u201d,2020 ,Udemy.   Proceedings of the International Conference on Self Sustainable Artificial Intelligence Systems (ICSSAS 2023)\nIEEE Xplore Part Number: CFP22DN7-ART; ISBN: 979-8-3503-0085-7\n979-8-3503-0085-7/23/$31.00 \u00a92023 IEEE 756\nAuthorized licensed use limited to: UNIVERSIDADE ESTADUAL DE MARINGA. Downloaded on February 21,2024 at 13:36:35 UTC from IEEE Xplore.  Restrictions apply.",
    "frequency": [
      [
        "jenkins",
        108
      ],
      [
        "development",
        45
      ],
      [
        "pipeline",
        44
      ],
      [
        "code",
        40
      ],
      [
        "automation",
        38
      ],
      [
        "software",
        35
      ],
      [
        "deployment",
        34
      ],
      [
        "developer",
        31
      ],
      [
        "integration",
        30
      ],
      [
        "continuous",
        29
      ]
    ]
  },
  {
    "title": "untitled",
    "article": "artigos/web/Web_application_development_model_with_security_concern_in_the_entire_life-cycle.pdf",
    "objectives": [
      "Thus, this study investigated the state of the art security considerations in web application development models with the need to focus on security issues throughout the life-cycle."
    ],
    "problems": [
      "This understanding directed the attention \nof researchers on improving the development process by \nconsidering security as a requirement, instead of a corrective measure or after thought issue.",
      "Thus, this study investigated the state of the art security considerations in web application development models with the need to focus on security issues throughout the life-cycle."
    ],
    "methodology": [
      "The use of inappropriate \nmethodology in developing an e-commerce application can seriously undermine organizations\u2019 confidentiality and integrity.",
      "Thus, there is a need for an appropriate development methodology to be created.",
      "Attackers are savvy enough to penetrate an application as legitimate users, but if safety programming methods are used the security breaches could be avoided or, in the least, reduced[3]."
    ],
    "contribuitions": null,
    "references": "[1] B. Mansoor, \"Chapter 8 - Intranet Security,\" in \nNetwork and System Security (Second Edition) , J. R. \nVacca, Ed., ed Boston: Syngress, 2014, pp. 221-258. \n[2] D. Wichers, \"The 2013 OWASP Top 10,\" in AppSec \nUSA 2013 , 2013. \n[3] D. Stuttard and M. Pinto, The web application \nhacker's handbook : discovering and exploiting security flaws . Indianapolis, IN: Wiley Pub, 2008. \n[4] N. Macia and F. G. Tinetti, \"Chapter 29 - Improving \nSecurity in Web Sessions: Special Management of Cookies,\" in Emerging Trends in ICT Security , B. \nAkhgar and H. R. Arabnia, Eds., ed Boston: Morgan Kaufmann, 2014, pp. 481-491. \n[5] A. Almaatouq , et al. , \"If it looks like a spammer and \nbehaves like a spammer, it must be a spammer: analysis and detection of microblogging spam accounts,\" International Journal of Information \nSecurity, vol. 15, pp. 475-491, 2016. \n [6] I. Uusitalo , et al. , \"Towards Evaluation of Security \nAssurance during the Software Development Lifecycle,\" in Availability, Reliability and Security, \nAuthorized licensed use limited to: UNIVERSIDADE ESTADUAL DE MARINGA. Downloaded on February 21,2024 at 13:43:03 UTC from IEEE Xplore.  Restrictions apply. 2009. ARES '09. International Conference on , 2009, \npp. 817-822. \n[7] M. Howard and S. Lipner, The security development \nlifecycle : O'Reilly Media, Incorporated, 2009. \n[8] W. Enck , et al. , \"On lightweight mobile phone \napplication certification,\" in Proceedings of the 16th \nACM conference on Computer and communications security , 2009, pp. 235-245. \n[9] B. De Win , et al. , \"On the secure software \ndevelopment process: CLASP, SDL and Touchpoints compared,\" Information and Software Technology, \nvol. 51, pp. 1152-1171, 2009. \n[10] M. I. P. Salas and E. Martins, \"Security Testing \nMethodology for Vulnerabilities Detection of XSS in Web Services and WS-Security,\" Electronic Notes in \nTheoretical Computer Science, vol. 302, pp. 133-154, \n2014. \n[11] A. Mourad , et al. , \"An aspect-oriented approach for \nthe systematic security hardening of code,\" Computers & Security, vol. 27, pp. 101-114, 2008. \n[12] R. Hassan , et al. , \"Goal-oriented, b-based formal \nderivation of security design specifications from security requirements,\" 2008, pp. 1443-1450. \n[13] J. Dong , et al. , \"Automated verification of security \npattern compositions,\" Information and Software \nTechnology, vol. 52, pp. 274-295, 2010. \n[14] R. Tissot , et al. , \"AB Formal Framework for Security \nDevelopments in the Domain of Smart Card Applications,\" International Federation for \nInformation Processing Digital Library, vol. 278, \n2010. \n[15] M. H. Alalfi , et al. , \"A verification framework for \naccess control in dynamic web applications,\" in Proceedings of the 2nd Canadian Conference on Computer Science and Software Engineering , 2009, \npp. 109-113. \n[16] Xiaohong Li, \"A Unified Threat Model for Assessing \nThreat in Web Applications,\" International Journal \nof Security and its Applications, vol. 2, 2008. \n[17] D. Xu , et al. , \"Automated security test generation \nwith formal threat models,\" Dependable and Secure \nComputing, IEEE Transactions on, vol. 9, pp. 526-\n540, 2012. \n [18] R. Kissel , et al. , \"SP 800-64 Rev. 2. Security \nConsiderations in the System Development Life Cycle,\" 2008. \n[19] C. Mao, \"Experiences in security testing for web-\nbased applications,\" presented at the Proceedings of the 2nd International Conference on Interaction Sciences: Information Technology, Culture and Human, Seoul, Korea, 2009. \n[20] S. Chong , et al. , \"Building secure web applications \nwith automatic partitioning,\" Commun. ACM, vol. 52, \npp. 79-87, 2009.  [21] A. Sengupta , et al. ,  vol. 3803 LNCS, ed, 2005, pp. \n328-331. \n[22] X. Ge , et al. , \"Agile development of secure web \napplications,\" 2006, pp. 305-312. \n[23] A. Hopkins, \"Web Application Vulnerability \nStatistics 2010-2011,\" 2012. \n[24] S. Christey , et al. , \"CWE/SANS Top 25 most \ndangerous software errors,\" ed, 2011. \n \n \nAuthorized licensed use limited to: UNIVERSIDADE ESTADUAL DE MARINGA. Downloaded on February 21,2024 at 13:43:03 UTC from IEEE Xplore.  Restrictions apply.",
    "frequency": [
      [
        "security",
        101
      ],
      [
        "application",
        61
      ],
      [
        "web",
        59
      ],
      [
        "development",
        52
      ],
      [
        "model",
        32
      ],
      [
        "study",
        29
      ],
      [
        "prototype",
        27
      ],
      [
        "vulnerability",
        22
      ],
      [
        "lifecycle",
        21
      ],
      [
        "test",
        19
      ]
    ]
  }
]